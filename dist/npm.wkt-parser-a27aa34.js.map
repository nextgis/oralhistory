{"version":3,"sources":["webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js"],"names":["parser","txt","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","text","Error","this","trim","level","place","root","stack","currentObject","state","mapit","obj","key","value","Array","isArray","unshift","thing","out","reduce","newObj","item","sExpr","v","i","shift","length","name","toLowerCase","convert","a","rf","prototype","readCharicter","char","test","neutral","quoted","afterquote","number","word","afterItem","push","pop","parseFloat","newObjects","D2R","d2r","input","__webpack_exports__","wkt","lisp","type","projName","local","PROJECTION","Object","keys","UNIT","units","DATUM","SPHEROID","to_meter","geogcs","GEOGCS","toMeter","datumCode","slice","sphere","indexOf","ellps","replace","TOWGS84","datum_params","b","isFinite","forEach","outName","params","inName","long0","longc","lat_ts","lat1","lat0","cleanWKT"],"mappings":"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","file":"npm.wkt-parser-a27aa34.js","sourcesContent":["export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n"],"sourceRoot":""}