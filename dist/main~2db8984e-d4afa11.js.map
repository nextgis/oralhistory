{"version":3,"sources":["webpack:///./nextgisweb_frontend/packages/vue-ngw-map/src/components/VueNgwControl.ts","webpack:///./nextgisweb_frontend/packages/utils/src/Clipboard.ts","webpack:///./nextgisweb_frontend/packages/utils/src/events.ts","webpack:///./nextgisweb_frontend/packages/utils/src/re/reEscape.ts","webpack:///./nextgisweb_frontend/packages/utils/src/sleep.ts","webpack:///./nextgisweb_frontend/packages/utils/src/applyMixins.ts","webpack:///./nextgisweb_frontend/packages/utils/src/deepmerge.ts","webpack:///./nextgisweb_frontend/packages/utils/src/debounce.ts","webpack:///./nextgisweb_frontend/packages/utils/src/index.ts","webpack:///./nextgisweb_frontend/packages/vue-ngw-map/src/components/VueNgwMap.ts","webpack:///./nextgisweb_frontend/packages/vue-ngw-map/src/components/VueNgwResource.ts","webpack:///./nextgisweb_frontend/packages/vue-ngw-mapbox/src/components/VueNgwMapbox.ts","webpack:///./nextgisweb_frontend/packages/webmap/src/utils/geometryTypes.ts","webpack:///./nextgisweb_frontend/packages/webmap/src/utils/updateGeoJsonAdapterOptions.ts","webpack:///./nextgisweb_frontend/packages/webmap/src/components/keys/KeysCodes.ts","webpack:///./nextgisweb_frontend/packages/webmap/src/components/keys/Keys.ts","webpack:///./nextgisweb_frontend/packages/webmap/src/components/mapStates/StateItem.ts","webpack:///./nextgisweb_frontend/packages/webmap/src/components/mapStates/CenterState.ts","webpack:///./nextgisweb_frontend/packages/webmap/src/components/mapStates/ZoomState.ts","webpack:///./nextgisweb_frontend/packages/webmap/src/components/controls/ToggleControl.ts","webpack:///./nextgisweb_frontend/packages/webmap/src/utils/decorators.ts","webpack:///./nextgisweb_frontend/packages/webmap/src/utils/getBoundsPolygon.ts","webpack:///./nextgisweb_frontend/packages/webmap/src/BaseWebMap.ts","webpack:///./nextgisweb_frontend/packages/webmap/src/utils/clearObject.ts","webpack:///./nextgisweb_frontend/packages/webmap/src/WebMapLayers.ts","webpack:///./nextgisweb_frontend/packages/webmap/src/WebMap.ts","webpack:///./nextgisweb_frontend/packages/webmap/src/index.ts","webpack:///./nextgisweb_frontend/packages/vue-ngw-map/src/utils.ts"],"names":["name","beforeDestroy","this","parentContainer","ngwMap","control","removeControl","undefined","setControl","element","adControlOptions","$props","controlOptions","controlObject","onAdd","onRemove","createControl","_control","addControl","position","mounted","$parent","$el","$nextTick","$emit","render","h","staticClass","staticStyle","attrs","$slots","default","type","String","Boolean","Object","VueNgwControl","text","copy","navigator","clipboard","writeText","window","clipboardData","setData","copyToClipboard","console","log","e","input","document","createElement","value","body","appendChild","copyNodeContentsToClipboard","removeChild","select","setSelectionRange","execCommand","Clipboard","emitter","_eventsStatus","setEventStatus","event","status","onLoad","promises","Array","isArray","map","x","Promise","res","getEventStatus","once","all","then","_eventName","reEscape","s","replace","sleep","delay","resolve","setTimeout","mixinProperties","derivedCtor","baseCtor","properties","forEach","descriptor","getOwnPropertyDescriptor","prototype","defineProperty","deepmerge","target","src","mergeArray","array","dst","concat","i","indexOf","push","keys","key","debounce","cb","wait","clearTimeout","args","fixUrlStr","url","ready","_setNgwMap","destroy","zIndex","fullFilling","width","height","data","mapAdapter","mapOptions","Number","VueNgwMap","layer","removeLayer","setResourceId","resourceId","oldId","order","options","adapterOptions","fit","addNgwLayer","adapter","VueNgwResource","VueNgwMapbox","findMostFrequentGeomType","arr","maxName","counts","fry","length","c","count","detectGeometryType","geojson","geometry","features","f","geometries","g","typeAlias","Point","LineString","MultiPoint","Polygon","MultiLineString","MultiPolygon","updateGeoJsonAdapterOptions","opt","geomType","p","paint","keyCodeAlias","KeyCodes","_windowOnFocus","windowOnFocus","bind","_keysPressed","keysPressed","_keysReleased","keysReleased","addKeyboardEventsListener","pressed","keyName","code","addEventListener","removeKeyboardEventsListener","removeEventListener","stopPropagation","keyCode","webMap","setValue","getValue","val","getCenter","setCenter","toString","d","toFixed","parse","str","split","StateItem","zoom","getZoom","Math","round","setZoom","createToggleControl","createButtonControl","link","getStatus","title","html","setTitle","on","off","setAttribute","_setHtml","htmlDef","HTMLElement","innerHTML","setHtml","_setClass","addClass","impact","classList","add","remove","setClass","addClassOn","addClassOff","changeStatus","status_","onClick","afterClick","catch","buttonControl","_target","_propertyKey","originalMethod","reject","_resolve","origin","apply","getBoundsPolygon","b","westNorth","coordinates","OPTIONS","minZoom","maxZoom","color","opacity","radius","weight","selectedPaint","appOptions","BaseWebMap","runtimeParams","getPaintFunctions","mapState","CenterState","ZoomState","_initMapState","_mapState","_mapEvents","_starterKits","starterKits","_addEventsListeners","create","_setInitMapState","_setupMap","_emitStatusEvent","setRuntimeParams","params","_removeEventsListeners","obj","member","clearObject","getState","state","getRuntimeParams","get","getContainer","getElementById","setCursor","cursor","lngLat","getBounds","bounds","setView","fitBounds","onMapLoad","isLoaded","getLayerAdapters","layerAdapters","getLayerAdapter","locate","events","stop","eventName","emit","_addLayerProviders","_onLoadSync","_zoomToInitialExtent","center","_extent","states","X","find","y","r","set","entries","utils","propertiesFilter","decorators","_layersIdCounter","_layersOrderCounter","_baseLayers","_layers","_selectedLayers","fitLayer","layerDef","getLayer","getExtent","extent","isBaseLayer","id","getBaseLayers","getLayerId","Error","getLayers","allLayers","findLayer","filter","l","layerAdapter","isLayerVisible","visibility","addBaseLayer","addLayer","baseLayer","_order","reserveOrder","adapterEngine","geoJsonOptions","_updateGeoJsonOptions","onBeforeAddLayer","modified","_adapter","layerId","filterLayer","showLayer","setLayerOpacity","addLayerFromAsyncAdapter","removeLayers","allowCb","allow","removeOverlays","beforeRemove","index","splice","addGeoJsonLayer","multiselect","unselectOnSecondClick","toggleLayer","hideLayer","onMap","toStatus","silent","action","source","preEventName","anotherVisibleLayerBaseLayer","call","setLayerOrder","updateLayer","selectLayer","findFeatureFun","unSelectLayer","unselect","filters","feature","removeLayerFilter","removeFilter","setLayerData","clearLayer","addData","addLayerData","clearLayerData","getAttributions","attributions","layerMem","onlyVisible","attr","attribution","getActiveBaseLayer","visibleLayerBaseLayer","_onLayerClick","onLayerClickFromOpt","onLayerClick","nativePaint","WebMap","controlDef","getControl","engine","controlAdapters","createFun","controls","kit","adapters","createAdapter","newAdapter","onLoadSync","error","CONTROL","BUTTON","TOGGLE","propsBinder","vueElement","props","setMethodName","charAt","toUpperCase","slice","prop","deepValue","$watch","newVal","oldVal","deep","findNgwMapParent","firstVueParent","found"],"mappings":"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","file":"main~2db8984e-d4afa11.js","sourcesContent":["/**\n * @module vue-ngw-map\n */\nimport Vue, { CreateElement, VNode, VNodeData } from 'vue';\nimport Component from 'vue-class-component';\nimport { Prop } from 'vue-property-decorator';\nimport {\n  MapControl,\n  CreateControlOptions,\n  ControlPositions\n} from '@nextgis/webmap';\nimport { findNgwMapParent, propsBinder } from '../utils';\nimport VueNgwMap from './VueNgwMap';\n\n@Component\nexport class VueNgwControl extends Vue {\n  name = 'vue-ngw-control';\n\n  @Prop({ type: String }) position!: ControlPositions;\n  @Prop({ type: Boolean }) bar!: boolean;\n  @Prop({ type: Boolean }) margin!: boolean;\n  @Prop({ type: String }) addClass!: string;\n  @Prop({ type: Object, default: () => ({}) })\n  controlOptions!: CreateControlOptions;\n\n  parentContainer!: VueNgwMap;\n\n  control?: unknown;\n\n  beforeDestroy() {\n    if (this.parentContainer.ngwMap && this.control) {\n      this.parentContainer.ngwMap.removeControl(this.control);\n      this.control = undefined;\n    }\n  }\n\n  async setControl(element: HTMLElement) {\n    const ngwMap = this.parentContainer.ngwMap;\n    const control = this.control;\n    if (ngwMap) {\n      if (control) {\n        ngwMap.removeControl(control);\n      }\n      const adControlOptions: CreateControlOptions = {\n        ...this.$props,\n        ...this.$props.controlOptions\n      };\n      const controlObject: MapControl = {\n        onAdd: () => {\n          return element;\n        },\n        onRemove: () => {\n          // ignore\n        }\n      };\n      const _control = await ngwMap.createControl(\n        controlObject,\n        adControlOptions\n      );\n      this.control = ngwMap.addControl(_control, this.position);\n    }\n  }\n\n  async mounted() {\n    this.parentContainer = findNgwMapParent(this.$parent);\n\n    await this.setControl(this.$el as HTMLElement);\n\n    propsBinder(this, this.$props);\n\n    this.$nextTick(() => {\n      this.$emit('ready', this.control);\n    });\n  }\n\n  render(h: CreateElement): VNode {\n    const staticStyle: { [param: string]: string } = {\n      // zIndex: '0'\n    };\n\n    const data: VNodeData = {\n      staticClass: 'vue-ngw-control',\n      staticStyle,\n      // 'class': this.classes,\n      attrs: { 'data-app': true }\n      // domProps: { id: this.id }\n    };\n\n    return h('div', data, this.$slots.default);\n  }\n}\n\nexport default VueNgwControl;\n","/**\n * @module utils\n */\nexport class Clipboard {\n  constructor(text: string) {\n    if (text) {\n      this.copy(text);\n    }\n  }\n\n  static copy = (text: string) => {\n    return new Clipboard(text);\n  };\n\n  copy(text: string) {\n    try {\n      if ((navigator as any).clipboard) {\n        (navigator as any).clipboard.writeText(text);\n      } else if ((window as any).clipboardData) {\n        (window as any).clipboardData.setData('text', text);\n      } else {\n        this.copyToClipboard(text);\n      }\n      console.log('Copied to Clipboard');\n    } catch (e) {\n      console.log('Please copy coupon manually');\n    }\n  }\n\n  private copyToClipboard(text: string) {\n    const input = document.createElement('input') as HTMLInputElement;\n    input.value = text;\n    try {\n      document.body.appendChild(input);\n      this.copyNodeContentsToClipboard(input);\n    } finally {\n      document.body.removeChild(input);\n    }\n  }\n\n  private copyNodeContentsToClipboard(input: HTMLInputElement) {\n    input.select();\n    input.setSelectionRange(0, 99999); /*For mobile devices*/\n    document.execCommand('copy');\n  }\n}\n","/**\n * @module utils\n */\nimport { EventEmitter } from 'events';\n\nexport class Events<E = any> {\n  private readonly _eventsStatus: { [key in keyof E]?: boolean } = {};\n\n  constructor(private emitter: EventEmitter) {}\n\n  setEventStatus(event: keyof E, status: boolean) {\n    this._eventsStatus[event] = status;\n  }\n\n  onLoad(event: keyof E | (keyof E)[]): Promise<this> {\n    const events: (keyof E)[] = Array.isArray(event) ? event : [event];\n    const promises = events.map(\n      x =>\n        new Promise(res => {\n          if (this.getEventStatus(x)) {\n            res(this);\n          } else {\n            const e = x as string | symbol;\n            this.emitter.once(e, () => {\n              this.setEventStatus(x, true);\n              res(this);\n            });\n          }\n        })\n    );\n    return Promise.all(promises).then(() => this);\n  }\n\n  getEventStatus(event: keyof E): boolean {\n    // ugly hack to disable type checking error\n    const _eventName = event as keyof E;\n    const status = this._eventsStatus[_eventName];\n    return status !== undefined ? !!status : false;\n  }\n}\n","export function reEscape(s: string) {\n  return s.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n","/**\n * @module utils\n */\nexport function sleep(delay = 0): Promise<void> {\n  return new Promise<void>(resolve => setTimeout(resolve, delay));\n}\n","/**\n * @module utils\n */\nexport function applyMixins(derivedCtor: any, baseCtors: any[]) {\n  baseCtors.forEach(baseCtor => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n      const descriptor = Object.getOwnPropertyDescriptor(\n        baseCtor.prototype,\n        name\n      );\n      if (descriptor) {\n        Object.defineProperty(derivedCtor.prototype, name, descriptor);\n      }\n    });\n  });\n}\n\nexport function mixinProperties(\n  derivedCtor: any,\n  baseCtor: any,\n  properties: string[]\n) {\n  properties.forEach(name => {\n    const descriptor = Object.getOwnPropertyDescriptor(\n      baseCtor.prototype,\n      name\n    );\n    if (descriptor) {\n      Object.defineProperty(derivedCtor.prototype, name, descriptor);\n    }\n  });\n}\n","/**\n * @module utils\n */\nexport function deepmerge(target: any, src: any, mergeArray = false): any {\n  const array = Array.isArray(src);\n  let dst: any = (array && []) || {};\n\n  if (array) {\n    if (mergeArray) {\n      target = target || [];\n      dst = dst.concat(target);\n      src.forEach(function(e: any, i: any) {\n        if (typeof dst[i] === 'undefined') {\n          dst[i] = e;\n        } else if (typeof e === 'object') {\n          dst[i] = deepmerge(target[i], e, mergeArray);\n        } else {\n          if (target.indexOf(e) === -1) {\n            dst.push(e);\n          }\n        }\n      });\n    } else {\n      // Replace array. Do not merge by default\n      dst = src;\n    }\n  } else {\n    if (target && typeof target === 'object') {\n      Object.keys(target).forEach(function(key) {\n        dst[key] = target[key];\n      });\n    }\n    Object.keys(src).forEach(function(key) {\n      if (typeof src[key] !== 'object' || !src[key]) {\n        dst[key] = src[key];\n      } else {\n        if (typeof target[key] === 'object' && typeof src[key] === 'object') {\n          dst[key] = deepmerge(target[key], src[key], mergeArray);\n        } else {\n          dst[key] = src[key];\n        }\n      }\n    });\n  }\n  return dst;\n}\n","/**\n * @module utils\n */\nexport function debounce<T extends Function>(cb: T, wait = 10) {\n  let h = 0;\n  const callable = (...args: any) => {\n    clearTimeout(h);\n    h = window.setTimeout(() => cb(...args), wait);\n  };\n  return (callable as any) as T;\n}\n","/**\n * @module utils\n */\nexport * from './Clipboard';\n\nexport * from './events';\nexport * from './array';\nexport * from './re';\nexport * from './sleep';\nexport * from './defined';\nexport * from './typeHelpers';\nexport * from './applyMixins';\nexport { deepmerge } from './deepmerge';\nexport { debounce } from './debounce';\n/**\n * Given an array of member function names as strings, replace all of them\n * with bound versions that will always refer to `context` as `this`. This\n * is useful for classes where otherwise event bindings would reassign\n * `this` to the evented object or some other value: this lets you ensure\n * the `this` value always.\n * Taken from: https://github.com/mapbox/mapbox-gl-js/blob/v1.0.0/src/util/util.js#L243\n */\nexport function bindAll(\n  fns: string[],\n  context: { [method: string]: (...args: any[]) => any }\n): void {\n  fns.forEach(fn => {\n    if (!context[fn]) {\n      return;\n    }\n    context[fn] = context[fn].bind(context);\n  });\n}\n\nexport function fixUrlStr(url: string): string {\n  // remove double slash\n  return url.replace(/([^:]\\/)\\/+/g, '$1');\n}\n","/**\n * @module vue-ngw-map\n */\nimport Vue, { VNode, VNodeData, CreateElement } from 'vue';\nimport { Prop } from 'vue-property-decorator';\nimport Component from 'vue-class-component';\nimport NgwMap, { NgwMapOptions, MapAdapter } from '@nextgis/ngw-map';\n\nimport NgwConnector from '@nextgis/ngw-connector';\n\n@Component\nexport class VueNgwMap<M = any> extends Vue {\n  @Prop({ type: Object }) mapAdapter!: MapAdapter;\n  @Prop({ type: Boolean }) fullFilling!: boolean;\n  @Prop({ type: NgwConnector }) connector!: NgwConnector;\n  @Prop({ type: String }) baseUrl!: string;\n  @Prop({ type: Number }) qmsId!: string;\n  @Prop({ type: String }) webMapId!: string;\n  @Prop({ type: Object }) mapOptions!: NgwMapOptions;\n  name = 'vue-ngw-map';\n  ngwMap!: NgwMap<M>;\n  ready = false;\n\n  mounted() {\n    this._setNgwMap();\n  }\n\n  beforeDestroy() {\n    this.ngwMap.destroy();\n  }\n\n  render(h: CreateElement): VNode {\n    const staticStyle: { [param: string]: string } = {\n      zIndex: '0'\n    };\n    if (this.fullFilling) {\n      staticStyle.width = '100%';\n      staticStyle.height = '100%';\n    }\n\n    const data: VNodeData = {\n      staticClass: 'vue-ngw-map',\n      staticStyle,\n      // 'class': this.classes,\n      attrs: { 'data-app': true }\n      // domProps: { id: this.id }\n    };\n\n    return this.ready ? h('div', data, this.$slots.default) : h('div', data);\n  }\n\n  private _setNgwMap() {\n    this.ngwMap = new NgwMap(this.mapAdapter, {\n      ...this.$props,\n      ...this.mapOptions,\n      target: this.$el as HTMLElement\n    });\n    this.ready = true;\n  }\n}\n\nexport default VueNgwMap;\n","/**\n * @module vue-ngw-map\n */\nimport Vue, { VNode, CreateElement } from 'vue';\nimport Component from 'vue-class-component';\nimport { Prop } from 'vue-property-decorator';\nimport { findNgwMapParent, propsBinder } from '../utils';\nimport { ResourceAdapter, NgwLayerAdapterType } from '@nextgis/ngw-kit';\nimport VueNgwMap from './VueNgwMap';\nimport { AdapterOptions } from '@nextgis/webmap';\n\n@Component\nexport class VueNgwResource extends Vue {\n  name = 'vue-ngw-resource';\n\n  @Prop({ type: Number }) resourceId!: string;\n  @Prop({ type: Boolean, default: false }) fit!: boolean;\n  @Prop({ type: String }) adapter!: NgwLayerAdapterType;\n  @Prop({ type: Object, default: () => ({}) }) adapterOptions!: AdapterOptions;\n\n  parentContainer!: VueNgwMap;\n\n  layer?: ResourceAdapter;\n\n  beforeDestroy() {\n    if (this.parentContainer.ngwMap && this.layer) {\n      this.parentContainer.ngwMap.removeLayer(this.layer);\n      this.layer = undefined;\n    }\n  }\n\n  async setResourceId(resourceId: string, oldId?: number) {\n    const ngwMap = this.parentContainer.ngwMap;\n    const layer = this.layer;\n    let order: number | undefined;\n    if (ngwMap) {\n      if (layer) {\n        order = layer.options.order;\n        ngwMap.removeLayer(layer);\n      }\n      const adapterOptions: AdapterOptions = { ...this.$props.adapterOptions };\n      if (order) {\n        adapterOptions.order = order;\n      }\n      if (resourceId) {\n        const fit = this.$props.fit ? !oldId : false;\n        this.layer = await ngwMap.addNgwLayer({\n          resourceId: Number(resourceId),\n          adapter: this.$props.adapter,\n          fit,\n          adapterOptions\n        });\n      }\n    }\n  }\n\n  async mounted() {\n    this.parentContainer = findNgwMapParent(this.$parent);\n\n    await this.setResourceId(this.$props.resourceId);\n\n    propsBinder(this, this.$props);\n\n    this.$nextTick(() => {\n      this.$emit('ready', this.layer);\n    });\n  }\n\n  render(h: CreateElement): VNode {\n    return h('div', {});\n  }\n}\n\nexport default VueNgwResource;\n","/**\n * @module vue-ngw-mapbox\n */\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nimport { Map } from 'mapbox-gl';\nimport { Mixins, Prop } from 'vue-property-decorator';\nimport Component from 'vue-class-component';\nimport { VueNgwMap } from '@nextgis/vue-ngw-map';\n\nimport MapAdapter from '@nextgis/mapboxgl-map-adapter';\n\n@Component\nexport class VueNgwMapbox extends Mixins<VueNgwMap<Map>>(VueNgwMap) {\n  @Prop({ type: Object, default: () => new MapAdapter() })\n  mapAdapter!: MapAdapter;\n}\n","/**\n * @module webmap\n */\nimport {\n  GeoJsonObject,\n  GeoJsonGeometryTypes,\n  FeatureCollection,\n  GeometryCollection,\n  Feature\n} from 'geojson';\n\nexport function findMostFrequentGeomType(\n  arr: GeoJsonGeometryTypes[]\n): GeoJsonGeometryTypes {\n  const counts: { [x: string]: number } = {};\n  for (let fry = 0; fry < arr.length; fry++) {\n    counts[arr[fry]] = 1 + (counts[arr[fry]] || 0);\n  }\n  let maxName;\n  for (const c in counts) {\n    const count = maxName !== undefined ? counts[maxName] : 0;\n    if (counts[c] > (count || 0)) {\n      maxName = c;\n    }\n  }\n  return maxName as GeoJsonGeometryTypes;\n}\n\nexport function detectGeometryType(\n  geojson: GeoJsonObject\n): GeoJsonGeometryTypes {\n  let geometry: GeoJsonGeometryTypes;\n  if (geojson.type === 'FeatureCollection') {\n    const featuresTypes = (geojson as FeatureCollection).features.map(\n      f => f.geometry.type\n    );\n    geometry = findMostFrequentGeomType(featuresTypes);\n  } else if (geojson.type === 'GeometryCollection') {\n    const geometryTypes = (geojson as GeometryCollection).geometries.map(\n      g => g.type\n    );\n    geometry = findMostFrequentGeomType(geometryTypes);\n  } else if (geojson.type === 'Feature') {\n    geometry = (geojson as Feature).geometry.type;\n  } else {\n    geometry = geojson.type;\n  }\n  return geometry;\n}\n","/**\n * @module webmap\n */\nimport { isPaint } from '@nextgis/paint';\nimport {\n  GeoJsonAdapterOptions,\n  VectorAdapterLayerType\n} from '../interfaces/LayerAdapter';\nimport { detectGeometryType } from './geometryTypes';\n\nexport const typeAlias: { [x: string]: VectorAdapterLayerType } = {\n  Point: 'circle',\n  LineString: 'line',\n  MultiPoint: 'circle',\n  Polygon: 'fill',\n  MultiLineString: 'line',\n  MultiPolygon: 'fill'\n};\n\nexport function updateGeoJsonAdapterOptions(\n  opt: GeoJsonAdapterOptions\n): GeoJsonAdapterOptions {\n  if (opt.data) {\n    const geomType = typeAlias[detectGeometryType(opt.data)];\n    const p = opt.paint;\n    if (p && isPaint(p)) {\n      // define parameter if not specified\n      p.type = p.type\n        ? p.type\n        : geomType === 'fill' || geomType === 'line'\n        ? 'path'\n        : 'html' in p || 'className' in p\n        ? 'icon'\n        : geomType;\n    }\n    opt.type = opt.type || geomType;\n  }\n  return opt;\n}\n","/**\n * @module webmap\n */\nexport class KeyCodes {\n  'backspace' = 8;\n  'tab' = 9;\n  'enter' = 13;\n  'shift' = 16;\n  'ctrl' = 17;\n  'alt' = 18;\n  'pause/break' = 19;\n  'caps_lock' = 20;\n  'escape' = 27;\n  'page_up' = 33;\n  'page_down' = 34;\n  'end' = 35;\n  'home' = 36;\n  'left_arrow' = 37;\n  'up_arrow' = 38;\n  'right_arrow' = 39;\n  'down_arrow' = 40;\n  'insert' = 45;\n  'delete' = 46;\n  'left_window_key' = 91;\n  'right_window_key' = 92;\n  'select_key' = 93;\n  'numpad_0' = 96;\n  'numpad_1' = 97;\n  'numpad_2' = 98;\n  'numpad_3' = 99;\n  'numpad_4' = 100;\n  'numpad_5' = 101;\n  'numpad_6' = 102;\n  'numpad_7' = 103;\n  'numpad_8' = 104;\n  'numpad_9' = 105;\n  'multiply' = 106;\n  'add' = 107;\n  'subtract' = 109;\n  'decimal_point' = 110;\n  'divide' = 111;\n  'f1' = 112;\n  'f2' = 113;\n  'f3' = 114;\n  'f4' = 115;\n  'f5' = 116;\n  'f6' = 117;\n  'f7' = 118;\n  'f8' = 119;\n  'f9' = 120;\n  'f10' = 121;\n  'f11' = 122;\n  'f12' = 123;\n  'num_lock' = 144;\n  'scroll_lock' = 145;\n  'semi-colon' = 186;\n  'equal_sign' = 187;\n  ',' = 188; // \"comma\";\n  '-' = 189; // \"dash\";\n  '.' = 190; // \"period\";\n  '/' = 191; // \"forward slash\";\n  '`' = 192; // \"grave accent\";\n  '[' = 219; // \"open bracket\";\n  '\\\\' = 220; // \"back slash\";\n  ']' = 221; // \"close braket\";\n  \"'\" = 222; // \"single quote\"\n}\n","/**\n * @module webmap\n */\nimport { KeyCodes } from './KeysCodes';\n\n/**\n * @param {string} key - key symbol\n * @param {string} func - action on key press\n * @param {number} [keyCode] - key code for special button like tab\n *\n * @export\n * @interface KeyControl\n */\nexport interface KeyControl {\n  key?: string;\n  keyCode?: number;\n  func: () => void;\n}\n\nexport class Keys {\n  keyCodeAlias = new KeyCodes();\n\n  keys: { [keyCode: number]: boolean } = {};\n\n  private _windowOnFocus: () => void;\n  private _keysPressed: (e: KeyboardEvent) => void;\n  private _keysReleased: (e: KeyboardEvent) => void;\n\n  constructor() {\n    this._windowOnFocus = this.windowOnFocus.bind(this);\n    this._keysPressed = this.keysPressed.bind(this);\n    this._keysReleased = this.keysReleased.bind(this);\n    this.addKeyboardEventsListener();\n  }\n\n  pressed(keyName: keyof KeyCodes): boolean {\n    const code = this.keyCodeAlias[keyName];\n    return !!code && this.keys[code];\n  }\n\n  addKeyboardEventsListener() {\n    window.addEventListener('focus', this._windowOnFocus, false);\n    window.addEventListener('keydown', this._keysPressed, false);\n    window.addEventListener('keyup', this._keysReleased, false);\n  }\n\n  removeKeyboardEventsListener() {\n    window.removeEventListener('focus', this._windowOnFocus, false);\n    window.removeEventListener('keydown', this._keysPressed, false);\n    window.removeEventListener('keyup', this._keysReleased, false);\n  }\n\n  private keysPressed(e: KeyboardEvent) {\n    e.stopPropagation();\n    if (!this.keys[e.keyCode]) {\n      this.keys[e.keyCode] = true;\n    }\n  }\n\n  private keysReleased(e: KeyboardEvent) {\n    e.stopPropagation();\n    this.keys[e.keyCode] = false;\n  }\n\n  private windowOnFocus() {\n    this.keys = {};\n  }\n}\n","/**\n * @module webmap\n */\nimport { MapStateItem } from '../../interfaces/MapState';\nimport { WebMapEvents } from '../../interfaces/Events';\nimport { WebMap } from '../../WebMap';\nimport { MapOptions } from '../../interfaces/WebMapApp';\n\nexport abstract class StateItem<V extends any | undefined = any | undefined>\n  implements MapStateItem<V | undefined> {\n  name!: keyof MapOptions;\n  event!: keyof WebMapEvents;\n  protected value?: V;\n\n  constructor(\n    protected webMap: WebMap,\n    opt?: { name?: keyof MapOptions; event?: keyof WebMapEvents; value?: V }\n  ) {\n    if (opt) {\n      if (opt.value) {\n        this.setValue(opt.value);\n      }\n      if (opt.name) {\n        this.name = opt.name;\n      }\n      if (opt.event) {\n        this.event = opt.event;\n      }\n    }\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  setValue(val: V) {\n    this.value = val;\n  }\n\n  abstract toString(data: any): string;\n  abstract parse(str: string): V;\n}\n","/**\n * @module webmap\n */\nimport { StateItem } from './StateItem';\nimport { WebMapEvents } from '../../interfaces/Events';\nimport { LngLatArray } from '../../interfaces/BaseTypes';\nimport { MapOptions } from '../../interfaces/WebMapApp';\n\nexport class CenterState extends StateItem<LngLatArray> {\n  name: keyof MapOptions = 'center';\n  event: keyof WebMapEvents = 'moveend';\n\n  getValue() {\n    return this.webMap.getCenter();\n  }\n  setValue(val: LngLatArray) {\n    this.webMap.setCenter(val);\n  }\n  toString(data: LngLatArray) {\n    const d = data.map(x => x.toFixed(5));\n    return d[0] + '_' + d[1];\n  }\n  parse(str: string) {\n    const lngLat = str.split('_').map(Number) as LngLatArray;\n    return lngLat;\n  }\n}\n","/**\n * @module webmap\n */\nimport { StateItem } from './StateItem';\nimport { WebMapEvents } from '../../interfaces/Events';\nimport { MapOptions } from '../../interfaces/WebMapApp';\n\nexport class ZoomState extends StateItem<number> {\n  name: keyof MapOptions = 'zoom';\n  event: keyof WebMapEvents = 'zoomend';\n  getValue() {\n    const zoom = this.webMap.getZoom();\n    return zoom !== undefined ? Math.round(zoom) : undefined;\n  }\n  setValue(val: number) {\n    this.webMap.setZoom(val);\n  }\n  toString(val: number) {\n    return String(val);\n  }\n  parse(str: string) {\n    return Number(str);\n  }\n}\n","/**\n * @module webmap\n */\nimport {\n  ToggleControlOptions,\n  ToggleControl,\n  ButtonControlOptions\n} from '../../interfaces/MapControl';\n\nexport function createToggleControl<C = any>(\n  createButtonControl: (options: ButtonControlOptions) => C,\n  options: ToggleControlOptions\n): C & ToggleControl {\n  const link = document.createElement('div');\n\n  let status = false;\n  if (options.getStatus) {\n    status = options.getStatus();\n  } else if (options.status) {\n    status = options.status;\n  }\n\n  const title = options.title || '';\n  const html = options.html;\n\n  function setTitle() {\n    if (title) {\n      if (typeof title === 'string') {\n        link.title = title;\n      } else {\n        link.title = status ? title.on : title.off;\n      }\n      link.setAttribute('aria-label', link.title);\n    }\n  }\n  setTitle();\n\n  // DomEvent.disableClickPropagation(link);\n  // DomEvent.on(link, 'click', DomEvent.stop);\n\n  function _setHtml(htmlDef: string | HTMLElement) {\n    if (htmlDef instanceof HTMLElement) {\n      link.innerHTML = '';\n      link.appendChild(htmlDef);\n    } else if (typeof htmlDef === 'string') {\n      link.innerHTML = htmlDef;\n    }\n  }\n  function setHtml() {\n    if (html) {\n      if (typeof html === 'string' || html instanceof HTMLElement) {\n        _setHtml(html);\n      } else {\n        _setHtml(status ? html.on : html.off);\n      }\n      link.setAttribute('aria-label', link.title);\n    }\n  }\n  setHtml();\n\n  function _setClass(addClass: string, impact: boolean) {\n    addClass.split(' ').forEach(x => {\n      if (impact) {\n        link.classList.add(x);\n      } else {\n        link.classList.remove(x);\n      }\n    });\n  }\n\n  function setClass() {\n    if (options.addClassOn) {\n      _setClass(options.addClassOn, status);\n    }\n    if (options.addClassOff) {\n      _setClass(options.addClassOff, !status);\n    }\n  }\n\n  if (options.addClass) {\n    _setClass(options.addClass, true);\n  }\n  setClass();\n\n  const changeStatus = (status_?: boolean) => {\n    if (status_ !== undefined) {\n      status = status_;\n    }\n    setHtml();\n    setTitle();\n    setClass();\n  };\n\n  const onClick = (status_?: boolean) => {\n    status = status_ !== undefined ? status_ : !status;\n    if (options.onClick) {\n      const afterClick = options.onClick(status);\n      Promise.resolve(afterClick)\n        .then(() => changeStatus())\n        .catch(() => (status = !status));\n    } else {\n      changeStatus();\n    }\n  };\n\n  const buttonControl = createButtonControl({\n    html: link,\n    onClick\n  }) as C & ToggleControl;\n  buttonControl.onClick = onClick;\n  buttonControl.changeStatus = changeStatus;\n  return buttonControl;\n}\n","/**\n * @module webmap\n */\n\nimport { WebMap } from '../WebMap';\nimport { WebMapEvents } from '../interfaces/Events';\n\nexport function onLoad<E extends WebMapEvents = WebMapEvents>(event: keyof E) {\n  return function(\n    _target: WebMap,\n    _propertyKey: string,\n    descriptor: PropertyDescriptor\n  ) {\n    const originalMethod = descriptor.value;\n\n    descriptor.value = function(\n      this: WebMap<unknown, unknown, unknown, E>,\n      ...args: unknown[]\n    ) {\n      return new Promise((resolve, reject) => {\n        const _resolve = (): void => {\n          const origin = originalMethod.apply(this, args);\n          origin && origin.then\n            ? origin.then(resolve).catch(reject)\n            : resolve(origin);\n        };\n        const isLoaded = this.getEventStatus(event);\n        if (isLoaded) {\n          _resolve();\n        } else {\n          this.emitter.once(event as keyof WebMapEvents, () => {\n            _resolve();\n          });\n        }\n      });\n    };\n    return descriptor;\n  };\n}\n","/**\n * @module webmap\n */\nimport { LngLatBoundsArray } from '../interfaces/BaseTypes';\nimport { Feature, Polygon } from 'geojson';\n\nexport function getBoundsPolygon(b: LngLatBoundsArray): Feature<Polygon> {\n  const westNorth = [b[0], b[1]];\n  const eastNorth = [b[2], b[1]];\n  const eastSouth = [b[2], b[3]];\n  const westSouth = [b[0], b[3]];\n\n  const feature: Feature<Polygon> = {\n    type: 'Feature',\n    properties: {},\n    geometry: {\n      type: 'Polygon',\n      coordinates: [[westNorth, eastNorth, eastSouth, westSouth, westNorth]]\n    }\n  };\n  return feature;\n}\n","/**\n * @module webmap\n */\nimport { EventEmitter } from 'events';\nimport { Feature, Polygon } from 'geojson';\nimport StrictEventEmitter from 'strict-event-emitter-types';\n\nimport { deepmerge } from '@nextgis/utils';\nimport { GetPaintFunction } from '@nextgis/paint';\n\nimport {\n  LngLatBoundsArray,\n  Type,\n  Cursor,\n  LngLatArray\n} from './interfaces/BaseTypes';\nimport {\n  Locate,\n  MapAdapter,\n  FitOptions,\n  LocateOptions,\n  LocationEvents\n} from './interfaces/MapAdapter';\nimport { StarterKit } from './interfaces/StarterKit';\nimport { LayerAdapter } from './interfaces/LayerAdapter';\nimport { RuntimeParams } from './interfaces/RuntimeParams';\nimport { MapOptions, AppOptions } from './interfaces/WebMapApp';\nimport { WebMapEvents, BaseMapEvents } from './interfaces/Events';\n\nimport { Keys } from './components/keys/Keys';\nimport { CenterState } from './components/mapStates/CenterState';\nimport { StateItem } from './components/mapStates/StateItem';\nimport { ZoomState } from './components/mapStates/ZoomState';\nimport { createToggleControl } from './components/controls/ToggleControl';\n\nimport {\n  detectGeometryType,\n  findMostFrequentGeomType\n} from './utils/geometryTypes';\nimport { onLoad } from './utils/decorators';\nimport { clearObject } from './utils/clearObject';\nimport { propertiesFilter } from './utils/propertiesFilter';\nimport { getBoundsPolygon } from './utils/getBoundsPolygon';\nimport { updateGeoJsonAdapterOptions } from './utils/updateGeoJsonAdapterOptions';\n\nconst OPTIONS: MapOptions = {\n  minZoom: 0,\n  maxZoom: 21,\n  paint: {\n    color: 'blue',\n    opacity: 1,\n    radius: 8,\n    weight: 1\n  },\n  selectedPaint: {\n    color: 'darkblue',\n    opacity: 1,\n    radius: 12,\n    weight: 1\n  }\n};\n\n/**\n * @class WebMap\n */\nexport class BaseWebMap<\n  M = any,\n  L = any,\n  C = any,\n  E extends WebMapEvents = WebMapEvents\n> {\n  static keys: Keys = new Keys();\n  static utils = {\n    detectGeometryType,\n    findMostFrequentGeomType,\n    updateGeoJsonAdapterOptions,\n    propertiesFilter,\n    createToggleControl,\n    getBoundsPolygon\n  };\n  static getPaintFunctions: { [name: string]: GetPaintFunction };\n  static decorators = { onLoad };\n\n  options: MapOptions = OPTIONS;\n  // `WebMapEvents` must be `E` but its not work correct\n  readonly emitter: StrictEventEmitter<\n    EventEmitter,\n    WebMapEvents\n  > = new EventEmitter();\n  readonly keys = BaseWebMap.keys;\n\n  readonly mapAdapter: MapAdapter<M>;\n  readonly runtimeParams: RuntimeParams[] = [];\n\n  getPaintFunctions = BaseWebMap.getPaintFunctions;\n  mapState: Type<StateItem>[] = [CenterState, ZoomState];\n\n  /**\n   * From runtime params\n   */\n  protected _initMapState: Record<string, any> = {};\n  protected readonly _starterKits: StarterKit[];\n  private _mapState: StateItem[] = [];\n  private _extent?: LngLatBoundsArray;\n  private readonly _eventsStatus: { [key in keyof E]?: boolean } = {};\n\n  private readonly _mapEvents: Record<string, (...args: any[]) => void> = {};\n\n  constructor(appOptions: AppOptions) {\n    this.mapAdapter = appOptions.mapAdapter;\n    this._starterKits = appOptions.starterKits || [];\n    if (appOptions.mapOptions) {\n      this.options = deepmerge(OPTIONS || {}, appOptions.mapOptions);\n    }\n    if (appOptions.runtimeParams) {\n      this.runtimeParams = appOptions.runtimeParams;\n    }\n    this._addEventsListeners();\n    if (appOptions.create) {\n      this.create(this.options);\n    }\n  }\n\n  /**\n   * Manual way to create a map. On default\n   * @example\n   * ```javascript\n   * const webMap = new WebMap(options);\n   * webMap.create(mapOptions).then(() => doSomething());\n   * ```\n   */\n  async create(options?: MapOptions): Promise<this> {\n    if (!this.getEventStatus('create')) {\n      this.options = deepmerge(OPTIONS || {}, options);\n      await this._setInitMapState(this.mapState);\n      await this._setupMap();\n      this._emitStatusEvent('create', this);\n    }\n    return this;\n  }\n\n  setRuntimeParams(params: RuntimeParams) {\n    this.runtimeParams.push(params);\n  }\n\n  /**\n   * Destroys WebMap, MapAdapter, clears all layers and turn off all event listeners\n   */\n  destroy() {\n    this._removeEventsListeners();\n    clearObject(this._emitStatusEvent);\n    if (this.mapAdapter.destroy) {\n      this.mapAdapter.destroy();\n    }\n  }\n\n  getState(): Record<string, any> {\n    const state: Record<string, any> = {};\n    this._mapState.forEach(x => {\n      state[x.name] = x.getValue();\n    });\n    return state;\n  }\n\n  getRuntimeParams(): Record<string, any> {\n    const state: Record<string, any> = {};\n    this._mapState.forEach(x => {\n      for (const r of this.runtimeParams) {\n        const val = r.get(x.name);\n        if (val !== undefined) {\n          state[x.name] = x.parse(val);\n          break;\n        }\n      }\n    });\n    return state;\n  }\n\n  /**\n   * Returns the HTML element that contains the map.\n   * @returns The map's container\n   */\n  getContainer(): HTMLElement | undefined {\n    if (this.mapAdapter.getContainer) {\n      return this.mapAdapter.getContainer();\n    } else if (this.options.target) {\n      if (this.options.target instanceof HTMLElement) {\n        return this.options.target;\n      } else if (typeof this.options.target === 'string') {\n        const element = document.getElementById(this.options.target);\n        if (element) {\n          return element;\n        }\n      }\n    }\n  }\n\n  /**\n   * Set the cursor icon to be displayed when hover icon on the map container.\n   * @param cursor available cursor name from https://developer.mozilla.org/ru/docs/Web/CSS/cursor\n   */\n  setCursor(cursor: Cursor) {\n    if (this.mapAdapter.setCursor) {\n      this.mapAdapter.setCursor(cursor);\n    }\n  }\n\n  /**\n   * Set the center of the current view.\n   * @param lngLat Array of two numbers representing longitude and latitude of the center of the map view.\n   *\n   * @example\n   * ```javascript\n   * // Mount Everest 27° 59′ 17″ N, 86° 55′ 31″ E\n   * webMap.setCenter([86.925278, 27.988056]);\n   * ```\n   */\n  setCenter(lngLat: LngLatArray): this {\n    this.mapAdapter.setCenter(lngLat);\n    return this;\n  }\n\n  /**\n   * Returns the map's geographical centerpoint.\n   * @return lngLat Array of two numbers representing longitude and latitude of the center of the map view.\n   *\n   * @example\n   * ```javascript\n   * // Mount Everest 27° 59′ 17″ N, 86° 55′ 31″ E\n   * webMap.getCenter(); // [86.925278, 27.988056]\n   * ```\n   */\n  getCenter(): LngLatArray | undefined {\n    return this.mapAdapter.getCenter();\n  }\n\n  getBounds(): LngLatBoundsArray | undefined {\n    if (this.mapAdapter.getBounds) {\n      return this.mapAdapter.getBounds();\n    }\n  }\n\n  getBoundsPolygon(): Feature<Polygon> | undefined {\n    const bounds = this.getBounds();\n    if (bounds) {\n      const feature = getBoundsPolygon(bounds);\n      return feature;\n    }\n  }\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param zoom The zoom level to set (0-24).\n   */\n  setZoom(zoom: number): this {\n    this.mapAdapter.setZoom(zoom);\n    return this;\n  }\n\n  /**\n   * Returns the map's current zoom level.\n   * @return The map's current zoom level (0-24).\n   */\n  getZoom(): number | undefined {\n    return this.mapAdapter.getZoom();\n  }\n\n  /**\n   * Sets the view of the map geographical center and zoom\n   * @param lngLat Array of two numbers representing longitude and latitude of the center of the map view.\n   * @param zoom The zoom level to set (0-24).\n   *\n   * @example\n   * ```javascript\n   * // Mount Everest 27° 59′ 17″ N, 86° 55′ 31″ E\n   * webMap.setView([86.925278, 27.988056], 12)\n   * ```\n   */\n  setView(lngLat?: LngLatArray, zoom?: number) {\n    if (this.mapAdapter.setView && lngLat && zoom) {\n      this.mapAdapter.setView(lngLat, zoom);\n    } else {\n      if (lngLat) {\n        this.mapAdapter.setCenter(lngLat);\n      }\n      if (zoom) {\n        this.mapAdapter.setZoom(zoom);\n      }\n    }\n  }\n\n  /**\n   * Sets a map view that contains the given geographical bounds.\n   * @param bounds Array of coordinates, measured in degrees, in [west, south, east, north] order.\n   * @param options\n   *\n   * @example\n   * ```javascript\n   * // Whall world\n   * webMap.fitBounds([0, -90, 180, 90]);\n   * ```\n   */\n  fitBounds(bounds: LngLatBoundsArray, options?: FitOptions): this {\n    this.mapAdapter.fitBounds(bounds, options);\n    return this;\n  }\n\n  /**\n   * Checking the status of any asynchronous operation\n   * @param event The name of the event whose status is checked\n   *\n   * @example\n   * ```javascript\n   * var webMap = new WebMap(options);\n   * webMap.getEventStatus('create'); // false\n   * webMap.emitter.on('create', function () {\n   *   webMap.getEventStatus('create'); // true\n   * })\n   * ```\n   */\n  getEventStatus(event: keyof E): boolean {\n    // ugly hack to disable type checking error\n    const _eventName = event as keyof WebMapEvents;\n    const status = this._eventsStatus[_eventName];\n    return status !== undefined ? status : false;\n  }\n\n  /**\n   * helper method to wait for events to load. By default, card creation is tracked\n   * @param event The name of the event whose status is checked\n   *\n   * @example\n   * ```javascript\n   * var webMap = new WebMap(options);\n   * webMap.onLoad().then(function () {\n   *   webMap.getEventStatus('create'); // true\n   * })\n   *\n   * // use async/await syntax\n   * async function () {\n   *   await webMap.onLoad();\n   *   doSomething();\n   * }\n   *\n   * ```\n   */\n  onLoad(event: keyof WebMapEvents = 'create'): Promise<this> {\n    return new Promise(res => {\n      if (this.getEventStatus(event)) {\n        res(this);\n      } else {\n        this.emitter.once(event, () => {\n          res(this);\n        });\n      }\n    });\n  }\n\n  onMapLoad(cb?: (mapAdapter: MapAdapter) => void): Promise<MapAdapter> {\n    return new Promise(res => {\n      const _resolve = () => {\n        const mapAdapter = this.mapAdapter;\n        if (cb) {\n          cb(mapAdapter);\n        }\n        if (mapAdapter) {\n          res(mapAdapter);\n        }\n      };\n      const isLoaded =\n        this.mapAdapter.isLoaded !== undefined\n          ? this.mapAdapter.isLoaded\n          : true;\n      if (this.mapAdapter.map && isLoaded) {\n        _resolve();\n      } else {\n        this.mapAdapter.emitter.once('create', () => {\n          _resolve();\n        });\n      }\n    });\n  }\n\n  getLayerAdapters(): { [name: string]: Type<LayerAdapter> } {\n    return this.mapAdapter.layerAdapters;\n  }\n\n  getLayerAdapter(name: string): Type<LayerAdapter> {\n    const adapter = this.mapAdapter.layerAdapters[name];\n    return adapter;\n  }\n\n  locate(opt: LocateOptions, events?: LocationEvents): Locate {\n    if (this.mapAdapter && this.mapAdapter.locate) {\n      return this.mapAdapter.locate(opt, events);\n    }\n    const stop = () => ({});\n    return { stop };\n  }\n\n  protected _emitStatusEvent(eventName: keyof E, data?: any) {\n    // ugly hack to disable type checking error\n    const _eventName = eventName as keyof WebMapEvents;\n    this._eventsStatus[_eventName] = true;\n    this.emitter.emit(_eventName, data);\n  }\n\n  protected async _addLayerProviders(): Promise<void> {\n    //\n  }\n\n  protected async _onLoadSync(): Promise<void> {\n    //\n  }\n\n  private async _setupMap() {\n    await this.mapAdapter.create(this.options);\n    this._zoomToInitialExtent();\n\n    await this._addLayerProviders();\n    await this._onLoadSync();\n\n    this._emitStatusEvent('build-map', this.mapAdapter);\n    return this;\n  }\n\n  private _zoomToInitialExtent() {\n    const { center, zoom, bounds } = this.options;\n    if (this._extent) {\n      this.fitBounds(this._extent);\n    } else if (center && zoom) {\n      this.setView(center, zoom);\n    } else if (bounds) {\n      this.fitBounds(bounds);\n    }\n  }\n\n  private _setInitMapState(states: Type<StateItem>[]) {\n    for (const X of states) {\n      const state = new X(this);\n      this._mapState.push(state);\n      for (const r of this.runtimeParams) {\n        const str = r.get(state.name);\n        if (str !== undefined) {\n          const val = state.parse(str);\n          // state.setValue(val);\n          this._initMapState[state.name] = val;\n          this.options[state.name] = val;\n          break;\n        }\n      }\n    }\n  }\n\n  private _addEventsListeners(): void {\n    const events: (keyof BaseMapEvents)[] = [\n      'click',\n      'zoomstart',\n      'zoom',\n      'zoomend',\n      'movestart',\n      'move',\n      'moveend'\n    ];\n    events.forEach(x => {\n      this._mapEvents[x] = data => {\n        if (this.runtimeParams.length) {\n          const mapStatusEvent = this._mapState.find(y => y.event === x);\n          if (mapStatusEvent) {\n            const value = mapStatusEvent.toString(mapStatusEvent.getValue());\n            this.runtimeParams.forEach(r => {\n              r.set(mapStatusEvent.name, value);\n            });\n          }\n        }\n        if (this._eventsStatus) {\n          this.emitter.emit(x, data);\n        }\n      };\n      this.mapAdapter.emitter.on(x, this._mapEvents[x]);\n    });\n  }\n\n  private _removeEventsListeners(): void {\n    Object.entries(this._mapEvents).forEach(([x, event]) => {\n      this.mapAdapter.emitter.off(x, event);\n    });\n  }\n}\n","/**\n * @module webmap\n */\n\nexport function clearObject(obj: Record<any, any>): void {\n  for (const member in obj) {\n    delete obj[member];\n  }\n}\n","/**\n * @module webmap\n */\nimport {\n  LayerAdapter,\n  LayerAdapters,\n  AdapterConstructor,\n  LayerAdaptersOptions,\n  AdapterOptions,\n  GeoJsonAdapterOptions,\n  VectorLayerAdapter,\n  DataLayerFilter,\n  OnLayerClickOptions,\n  PropertiesFilter,\n  FilterOptions,\n  LayerDefinition\n} from './interfaces/LayerAdapter';\nimport { LayerDef, Type } from './interfaces/BaseTypes';\n\nimport { Feature, GeoJsonObject } from 'geojson';\nimport { preparePaint } from '@nextgis/paint';\nimport { updateGeoJsonAdapterOptions } from './utils/updateGeoJsonAdapterOptions';\nimport {\n  GetAttributionsOptions,\n  ToggleLayerOptions\n} from './interfaces/WebMapApp';\nimport { propertiesFilter } from './utils/propertiesFilter';\nimport { BaseWebMap } from './BaseWebMap';\nimport { WebMapEvents } from './interfaces/Events';\n\nexport class WebMapLayers<\n  M = any,\n  L = any,\n  C = any,\n  E extends WebMapEvents = WebMapEvents\n> extends BaseWebMap<M, L, C, E> {\n  private _layersIdCounter = 1;\n  private _layersOrderCounter = 1;\n  private readonly _baseLayers: string[] = [];\n  private readonly _layers: { [id: string]: LayerAdapter } = {};\n  private readonly _selectedLayers: string[] = [];\n\n  /**\n   * Try to fit map view by given layer bounds.\n   * But not all layers have borders\n   * @param layerDef\n   */\n  async fitLayer(layerDef: LayerDef) {\n    const layer = this.getLayer(layerDef);\n    if (layer && layer.getExtent) {\n      const extent = await layer.getExtent();\n      if (extent) {\n        this.fitBounds(extent);\n      }\n    }\n  }\n\n  /**\n   * Check if given layer is baselayer\n   * @param layerName Check\n   */\n  isBaseLayer(layerDef: LayerDef): boolean | undefined {\n    const layer = this.getLayer(layerDef);\n    if (layer && layer.id) {\n      return this._baseLayers.indexOf(layer.id) !== -1;\n    }\n    return undefined;\n  }\n\n  getBaseLayers() {\n    return this._baseLayers;\n  }\n\n  /**\n   * Helper method to return added layer object by any definition type.\n   */\n  getLayer<LA extends LayerAdapter = LayerAdapter>(\n    layerDef: LayerDef\n  ): LA | undefined {\n    if (typeof layerDef === 'string') {\n      return this._layers[layerDef] as LA;\n    }\n    return layerDef as LA;\n  }\n\n  /**\n   * Helper method to return added layer identificator by any definition type.\n   */\n  getLayerId(layerDef: LayerDef): string | undefined {\n    const layer = this.getLayer(layerDef);\n    if (layer && layer.options) {\n      return layer.options.id;\n    } else {\n      throw new Error('No id for layer');\n    }\n  }\n\n  /**\n   * Return array of all added layer identifications.\n   */\n  getLayers(): string[] {\n    return Object.keys(this._layers);\n  }\n\n  // TODO: rename to getLayers, getLayers rename to getLayersIds\n  allLayers() {\n    return this._layers;\n  }\n\n  findLayer<T extends LayerAdapter = LayerAdapter>(\n    filter: (adapter: T) => boolean\n  ): T | undefined {\n    for (const l in this._layers) {\n      const layerAdapter = this._layers[l] as T;\n      const isFit = filter(layerAdapter);\n      if (isFit) {\n        return layerAdapter;\n      }\n    }\n  }\n\n  /**\n   * Check if the given layer on the map\n   */\n  isLayerVisible(layerDef: LayerDef): boolean {\n    const layer = this.getLayer(layerDef);\n    return layer && layer.options.visibility !== undefined\n      ? layer.options.visibility\n      : false;\n  }\n\n  /**\n   * Shortcut method to create base layer\n   * @param adapter\n   * @param options\n   */\n  async addBaseLayer<\n    K extends keyof LayerAdapters,\n    O extends AdapterOptions = AdapterOptions\n  >(\n    adapter: K | Type<LayerAdapters[K]>,\n    options: O | LayerAdaptersOptions[K]\n  ): Promise<LayerAdapter> {\n    const layer = await this.addLayer(adapter, {\n      ...options,\n      baseLayer: true\n    });\n\n    return layer;\n  }\n\n  /**\n   * Registration of map layer.\n   *\n   * @param adapter The name of layer adapter from [MapAdapter.layerAdapters](webmap#MapAdapter.layerAdapters).\n   *                May be custom object or class implemented by [BaseLayerAdapter](webmap#BaseLayerAdapter).\n   * @param options Specific options for given adapter\n   *\n   * @example\n   * ```javascript\n   * webMap.addLayer('TILE', options).then((layer) => webMap.showLayer(layer));\n   *\n   * webMap.addLayer(CustomLayerAdapter, options);\n   * ```\n   */\n  async addLayer<\n    K extends keyof LayerAdapters,\n    O extends AdapterOptions = AdapterOptions\n  >(\n    adapter:\n      | K\n      | Type<LayerAdapters[K]>\n      | Promise<Type<LayerAdapters[K]> | undefined>,\n    options: O | LayerAdaptersOptions[K],\n    order?: number\n  ): Promise<LayerAdapter> {\n    const id = this._layersIdCounter++;\n    const _order =\n      order !== undefined\n        ? order\n        : options.order !== undefined\n        ? options.order\n        : this.reserveOrder();\n    let adapterEngine: Type<LayerAdapter> | undefined;\n    if (typeof adapter === 'string') {\n      adapterEngine = this.getLayerAdapter(adapter);\n    } else if (typeof adapter === 'function') {\n      adapterEngine = adapter as Type<LayerAdapter>;\n    } else if (\n      'then' in (adapter as Promise<Type<LayerAdapters[K]> | undefined>)\n    ) {\n      adapterEngine = (await adapter) as Type<LayerAdapters[K]>;\n    }\n\n    const geoJsonOptions = options as GeoJsonAdapterOptions;\n\n    this._updateGeoJsonOptions(geoJsonOptions);\n\n    const { maxZoom, minZoom } = this.options;\n\n    options = {\n      id: String(id),\n      order: _order,\n      maxZoom,\n      minZoom,\n      ...options\n    };\n    // options.visibility is a layer global state, but each layer on init is not visible\n    const visibility = options.visibility;\n    options.visibility = false;\n\n    // TODO: check usage in adapter constructor and safe remove\n    if (options.baseLayer) {\n      options.order = 0;\n    }\n    if (this.options.onBeforeAddLayer) {\n      const modified = this.options.onBeforeAddLayer({\n        options,\n        adapter: adapterEngine\n      });\n      if (modified) {\n        if (modified.options) {\n          options = modified.options;\n        }\n        if (modified.adapter) {\n          adapterEngine = modified.adapter;\n        }\n      }\n    }\n    if (adapterEngine !== undefined) {\n      const _adapter = new adapterEngine(this.mapAdapter.map, options);\n      if (_adapter.options.baseLayer) {\n        options.baseLayer = true;\n        options.order = 0;\n      }\n\n      let layerId = _adapter.options.id;\n      if (layerId) {\n        this._layers[layerId] = _adapter;\n      }\n      this.emitter.emit('layer:preadd', _adapter);\n      await this.onMapLoad();\n      const layer = await _adapter.addLayer(options);\n      // checking that the original layer was inserted into the adapter anyway\n      _adapter.layer = layer;\n      // think about how to move `id` to the adapter's constructor,\n      // but that it is not required in the options\n      _adapter.id = _adapter.options.id || String(id);\n      _adapter.order = _adapter.options.order || _order;\n\n      layerId = _adapter.options.id;\n      if (layerId) {\n        if (geoJsonOptions.filter) {\n          this.filterLayer(_adapter, geoJsonOptions.filter);\n        }\n        if (options.baseLayer) {\n          this._baseLayers.push(layerId);\n        }\n        this._layers[layerId] = _adapter;\n\n        if (visibility) {\n          this.showLayer(layerId);\n        }\n      }\n      const opacity = options.opacity;\n      if (opacity !== undefined && opacity <= 1) {\n        this.setLayerOpacity(_adapter, opacity);\n      }\n      if (options.fit && _adapter.getExtent) {\n        const extent = await _adapter.getExtent();\n        if (extent) {\n          await this.fitBounds(extent);\n        }\n      }\n      this.emitter.emit('layer:add', _adapter);\n      return _adapter;\n    }\n    return Promise.reject('No adapter');\n  }\n\n  async addLayerFromAsyncAdapter<\n    K extends keyof LayerAdapters,\n    O extends AdapterOptions = AdapterOptions\n  >(\n    adapter: AdapterConstructor,\n    options: O | LayerAdaptersOptions[K],\n    order?: number\n  ): Promise<LayerAdapter> {\n    const _order =\n      order || options.order !== undefined\n        ? options.order\n        : 0 || this.reserveOrder();\n    const adapterConstructor = adapter as AdapterConstructor;\n    const adapterConstructorPromise = adapterConstructor();\n    const adapterEngine = await adapterConstructorPromise;\n    if (adapterEngine) {\n      return this.addLayer(adapterEngine, options, _order);\n    }\n    return Promise.reject('No adapter');\n  }\n\n  /**\n   * Remove all layer from map and memory.\n   */\n  removeLayers(allowCb?: (layer: string, adapter: LayerAdapter) => boolean) {\n    for (const l in this._layers) {\n      let allow = true;\n      if (allowCb) {\n        allow = allowCb(l, this._layers[l]);\n      }\n      if (allow) {\n        this.removeLayer(l);\n        delete this._layers[l];\n      }\n    }\n  }\n\n  reserveOrder(): number {\n    return this._layersOrderCounter++;\n  }\n\n  /**\n   * Remove all layers but not remove basemap.\n   */\n  removeOverlays() {\n    this.removeLayers((layerId, layer) => !layer.options.baseLayer);\n  }\n\n  /**\n   * Remove specific layer from map and memory by its definition.\n   * @param layerDef\n   */\n  removeLayer(layerDef: LayerDef) {\n    const layer = this.getLayer(layerDef);\n    const layerId = layer && this.getLayerId(layer);\n    if (layer && layerId) {\n      this.emitter.emit('layer:preremove', layer);\n      if (layer.beforeRemove) {\n        layer.beforeRemove();\n      }\n      if (layer.removeLayer) {\n        layer.removeLayer();\n      } else {\n        this.mapAdapter.removeLayer(layer.layer);\n      }\n      if (layer.options && layer.options.baseLayer) {\n        const index = this._baseLayers.indexOf(layerId);\n        if (index) {\n          this._baseLayers.splice(index, 1);\n        }\n      }\n      delete this._layers[layerId];\n      this.emitter.emit('layer:remove', layer);\n    }\n  }\n\n  /**\n   * Create layer from GeoJson data. Set style and behavior for selection.\n   *\n   * @example\n   * ```javascript\n   * // Add simple layer\n   * webMap.addGeoJsonLayer({ data: geojson, paint: { color: 'red' } });\n   *\n   * // Add styled by feature property layer with selection behavior\n   * webMap.addGeoJsonLayer({\n   *   data: geojson,\n   *   paint: function (feature) {\n   *     return { color: feature.properties.color, opacity: 0.5 }\n   *   },\n   *  selectedPaint: function (feature) {\n   *    return { color: feature.properties.selcolor, opacity: 1 }\n   *  },\n   *  selectable: true,\n   *  multiselect: true\n   * });\n   *\n   * // Add marker layer styled with use [Icons](icons)\n   * webMap.addGeoJsonLayer({ data: geojson, paint: webMap.getIcon({ color: 'orange' })});\n   *\n   * // work with added layer\n   * const layer = webMap.addGeoJsonLayer({ data: geojson, id: 'my_layer_name'});\n   * // access layer by id\n   * webMap.showLayer('my_layer_name');\n   * // or access layer by instance\n   * webMap.showLayer(layer);\n   * ```\n   */\n  // @onMapLoad()\n  async addGeoJsonLayer<K extends keyof LayerAdaptersOptions>(\n    opt: GeoJsonAdapterOptions,\n    adapter?: K | Type<LayerAdapter>\n  ) {\n    opt = opt || {};\n    opt.multiselect = opt.multiselect !== undefined ? opt.multiselect : false;\n    opt.unselectOnSecondClick =\n      opt.unselectOnSecondClick !== undefined\n        ? opt.unselectOnSecondClick\n        : true;\n    if (!adapter) {\n      opt = updateGeoJsonAdapterOptions(opt);\n    }\n    opt.paint = opt.paint || {};\n    const layer = await this.addLayer(adapter || 'GEOJSON', opt);\n    this.showLayer(layer);\n    return layer;\n  }\n\n  /**\n   * Show added layer on the map by it definition.\n   */\n  showLayer(layerDef: LayerDef, options: ToggleLayerOptions = {}) {\n    this.toggleLayer(layerDef, true, options);\n  }\n\n  /**\n   * Hide added layer on the map by it definition.\n   */\n  hideLayer(layerDef: LayerDef, options: ToggleLayerOptions = {}) {\n    this.toggleLayer(layerDef, false, options);\n  }\n\n  /**\n   * Change added layer visibility on the map by given status or inverse current status.\n   *\n   * @example\n   * ```javascript\n   * webMap.addLayer('TILE', {id: 'my_layer', url: ''}).then((layer) => {\n   *   webMap.toggleLayer(layer, true);\n   *   webMap.toggleLayer('my_layer', false);\n   *   webMap.toggleLayer('my_layer');\n   *   webMap.isLayerVisible(layer); // true\n   * });\n   * ```\n   */\n  toggleLayer(\n    layerDef: LayerDef,\n    status?: boolean,\n    options: ToggleLayerOptions = {}\n  ) {\n    const layer = this.getLayer(layerDef);\n    const onMap = layer && layer.options.visibility;\n    const toStatus = status !== undefined ? status : !onMap;\n    const silent = options.silent !== undefined ? options.silent : false;\n    const action = (source: any, l: LayerAdapter) => {\n      l.options.visibility = toStatus;\n\n      const preEventName = toStatus ? 'layer:preshow' : 'layer:prehide';\n      const eventName = toStatus ? 'layer:show' : 'layer:hide';\n      if (!silent) {\n        this.emitter.emit(preEventName, l);\n      }\n      if (toStatus && source) {\n        const order = l.options.baseLayer ? 0 : l.options.order;\n\n        // do not show baselayer if another on the map\n        if (order === 0 && this._baseLayers.length) {\n          const anotherVisibleLayerBaseLayer = this._baseLayers.find(x => {\n            return x !== l.id && this.isLayerVisible(x);\n          });\n          if (anotherVisibleLayerBaseLayer) {\n            this.hideLayer(anotherVisibleLayerBaseLayer);\n          }\n        }\n\n        if (l.showLayer) {\n          l.showLayer.call(l, l.layer);\n        } else {\n          this.mapAdapter.showLayer(l.layer);\n        }\n        if (order !== undefined) {\n          this.mapAdapter.setLayerOrder(l.layer, order, this._layers);\n        }\n      } else {\n        if (l.hideLayer) {\n          l.hideLayer.call(l, l.layer);\n        } else {\n          this.mapAdapter.hideLayer(l.layer);\n        }\n      }\n      if (!silent) {\n        this.emitter.emit(eventName, l);\n      }\n    };\n    if (layer && layer.options.visibility !== toStatus) {\n      if (this.mapAdapter.map) {\n        action(this.mapAdapter, layer);\n      } else {\n        this.mapAdapter.emitter.once('create', adapter => {\n          action(adapter.map, layer);\n        });\n      }\n    }\n  }\n\n  updateLayer(layerDef: LayerDef) {\n    const layer = this.getLayer(layerDef);\n    if (layer) {\n      if (layer.updateLayer) {\n        layer.updateLayer();\n      } else if (this.isLayerVisible(layer)) {\n        this.hideLayer(layer, { silent: true });\n        this.showLayer(layer, { silent: true });\n      }\n    }\n  }\n\n  /**\n   * Set transparency for a given layer by number from 0 to 1\n   */\n  setLayerOpacity(layerDef: LayerDef, value: number) {\n    const layer = this.getLayer(layerDef);\n    if (layer) {\n      if (this.mapAdapter.setLayerOpacity) {\n        if (layer) {\n          this.mapAdapter.setLayerOpacity(layer.layer, value);\n        }\n      }\n    }\n  }\n\n  // requestGeomString(pixel: Pixel, pixelRadius: number) {\n  //   if (this.mapAdapter.requestGeomString) {\n  //     return this.mapAdapter.requestGeomString(pixel, pixelRadius);\n  //   }\n  // }\n\n  /**\n   * Mark the layer as selected.\n   * If the adapter is a vector layer and supports data selection,\n   * you can pass a callback function to specify which data will be selected.\n   *\n   * @example\n   * ```javascript\n   * const layer = webMap.addLayer('GEOJSON', {data: geojson}).then((layer) => {\n   *   webMap.selectLayer(layer, ({feature}) => feature.id === '42');\n   * });\n   * ```\n   * @param layerDef\n   * @param findFeatureFun\n   */\n  selectLayer(layerDef: LayerDef, findFeatureFun?: DataLayerFilter) {\n    const layer = this.getLayer(layerDef);\n    if (layer) {\n      const adapter = layer as VectorLayerAdapter;\n      if (adapter && adapter.select) {\n        adapter.select(findFeatureFun);\n      }\n      const layerId = this.getLayerId(layer);\n      if (layerId) {\n        this._selectedLayers.push(layerId);\n      }\n    }\n  }\n\n  /**\n   * Unselect the given layer.\n   * If the adapter is a vector layer and supports data selection,\n   * you can pass a callback function to specify which data will be unselected.\n   *\n   * @example\n   * ```javascript\n   * const layer = webMap.addLayer('GEOJSON', {data: geojson}).then((layer) => {\n   *   webMap.unSelectLayer(layer, ({feature}) => feature.id === '42');\n   * });\n   * ```\n   *\n   * @param layerDef\n   * @param findFeatureFun\n   */\n  unSelectLayer(layerDef: LayerDef, findFeatureFun?: DataLayerFilter) {\n    const layer = this.getLayer(layerDef);\n    if (layer) {\n      const adapter = layer && (layer as VectorLayerAdapter);\n      if (adapter.unselect) {\n        adapter.unselect(findFeatureFun);\n      }\n      const layerId = this.getLayerId(layer);\n      if (layerId) {\n        const index = this._selectedLayers.indexOf(layerId);\n        if (index !== -1) {\n          this._selectedLayers.splice(index, 1);\n        }\n      }\n    }\n  }\n\n  /**\n   * Hide features from a vector layer using a callback function.\n   *\n   * @example\n   * ```javascript\n   * const layer = webMap.addLayer('GEOJSON', {data: geojson}).then((layer) => {\n   *   webMap.filterLayer(layer, ({feature}) => feature.id === '42');\n   * });\n   * ```\n   *\n   * @param layerDef\n   * @param filter\n   */\n  filterLayer(\n    layerDef: LayerDef,\n    filter: DataLayerFilter<Feature, L>\n  ): LayerDefinition<Feature, L>[] {\n    const layer = this.getLayer(layerDef);\n    const adapter = layer as VectorLayerAdapter;\n    if (adapter.filter) {\n      return adapter.filter(filter);\n    }\n    return [];\n  }\n\n  propertiesFilter(\n    layerDef: LayerDef,\n    filters: PropertiesFilter,\n    options?: FilterOptions\n  ) {\n    const layer = this.getLayer(layerDef);\n    const adapter = layer as VectorLayerAdapter;\n    if (adapter.propertiesFilter) {\n      adapter.propertiesFilter(filters, options);\n    } else if (adapter.filter) {\n      this.filterLayer(adapter, e => {\n        if (e.feature && e.feature.properties) {\n          return propertiesFilter(e.feature.properties, filters);\n        }\n        return true;\n      });\n    }\n  }\n\n  removeLayerFilter(layerDef: LayerDef) {\n    const layer = this.getLayer(layerDef);\n    const adapter = layer as VectorLayerAdapter;\n    if (adapter.removeFilter) {\n      adapter.removeFilter();\n    } else if (adapter.filter) {\n      adapter.filter(() => {\n        return true;\n      });\n    }\n  }\n\n  /**\n   * Sets the GeoJSON data for given vector layer.\n   *\n   * @example\n   * ```javascript\n   * const layer = webMap.addLayer('GEOJSON').then((layer) => {\n   *   webMap.setLayerData(layer, geojson);\n   * });\n   * ```\n   */\n  setLayerData(layerDef: LayerDef, data: GeoJsonObject) {\n    const vectorAdapter = this.getLayer(layerDef);\n    const adapter = vectorAdapter as VectorLayerAdapter;\n    if (adapter) {\n      if (adapter.setData) {\n        adapter.setData(data);\n      } else if (adapter.clearLayer && adapter.addData) {\n        adapter.clearLayer();\n        adapter.addData(data);\n      }\n    }\n  }\n\n  /**\n   * Push new the GeoJSON features into given vector layer.\n   *\n   * @example\n   * ```javascript\n   * const layer = webMap.addLayer('GEOJSON', {data: geojson_features_5}).then((layer) => {\n   *   console.log(layer.getLayers().length) // > 5;\n   *   webMap.addLayerData(layer, geojson_features_3);\n   *   console.log(layer.getLayers().length) // > 8;\n   * });\n   * ```\n   */\n  addLayerData(layerDef: LayerDef, data: GeoJsonObject) {\n    const layerMem = this.getLayer(layerDef);\n    const adapter = layerMem as VectorLayerAdapter;\n    if (adapter.addData) {\n      adapter.addData(data);\n    }\n  }\n\n  /**\n   * Remove from vector layer all features.\n   * it is possible to remove only some objects if you specify a callback function.\n   *\n   * @example\n   * ```javascript\n   * const layer = webMap.addLayer('GEOJSON', {data: geojson}).then((layer) => {\n   *   webMap.clearLayerData(layer, (feture) => feture.id === 42);\n   *   webMap.clearLayerData(layer);\n   * });\n   * ```\n   */\n  clearLayerData(layerDef: LayerDef, cb?: (feature: Feature) => boolean) {\n    const layerMem = this.getLayer(layerDef);\n    const adapter = layerMem as VectorLayerAdapter;\n    if (adapter && adapter.clearLayer) {\n      adapter.clearLayer(cb);\n    }\n  }\n\n  getAttributions(options: GetAttributionsOptions): string[] {\n    const attributions: string[] = [];\n    for (const l in this._layers) {\n      const layerMem = this._layers[l];\n      const onlyVisible =\n        options.onlyVisible !== undefined ? options.onlyVisible : true;\n      const useLayerAttr = onlyVisible ? layerMem.options.visibility : true;\n      if (useLayerAttr) {\n        const attr = layerMem.options && layerMem.options.attribution;\n        if (attr) {\n          attributions.push(attr);\n        }\n      }\n    }\n\n    return attributions;\n  }\n\n  getActiveBaseLayer() {\n    const visibleLayerBaseLayer = this.getBaseLayers().find(x => {\n      return this.isLayerVisible(x);\n    });\n    if (visibleLayerBaseLayer) {\n      return this.getLayer(visibleLayerBaseLayer);\n    }\n  }\n\n  private async _onLayerClick(options: OnLayerClickOptions) {\n    this.emitter.emit('layer:click', options);\n    return Promise.resolve(options);\n  }\n\n  private _updateGeoJsonOptions(options: GeoJsonAdapterOptions) {\n    const onLayerClickFromOpt = options.onLayerClick;\n    options.onLayerClick = e => {\n      if (onLayerClickFromOpt) {\n        onLayerClickFromOpt(e);\n      }\n      return this._onLayerClick(e);\n    };\n\n    if (!options.nativePaint) {\n      if (this.options.paint) {\n        options.paint = preparePaint(\n          options.paint || {},\n          this.options.paint,\n          this.getPaintFunctions\n        );\n      }\n      if (options.selectedPaint && this.options.selectedPaint) {\n        options.selectedPaint = preparePaint(\n          options.selectedPaint,\n          this.options.selectedPaint,\n          this.getPaintFunctions\n        );\n      }\n    }\n  }\n}\n","/**\n * @module webmap\n *\n * Since it was not possible to split the code through mixins, inheritance was used.\n * The `ts-mixin` plugin worked fine, but led to errors in IE.\n *\n * Now inheritance is as follow:\n * BaseWebMap > WebMapLayers > WebMap\n *\n * Will need to be done this way:\n * class WebMap extend mixin(WebMapLayers, WebMapControls) {}\n *\n * This approach can also be considered\n *\n * class WebMap {\n *   layers: WebMapLayers;\n *   controls  WebMapControls\n * }\n *\n * and then\n *\n * const webMap = new WebMap(...);\n * webMap.layers.addLayer(...)\n *\n * looks good, but will add difficulty in inheriting from WebMap\n *\n * old:\n *\n * class NgwMap extends WebMap {\n *   addLayer(...) {\n *      super.addLayer(...)\n *   }\n * }\n *\n * new:\n *\n * class NgwLayers extends WebMapLayers {\n *   addLayer(...) {\n *     super.addLayer(...)\n *   }\n * }\n *\n * class NgwMap extends WebMap {\n *   layersClass = NgwLayers\n * }\n *\n * ...and there will be compatibility issues\n *\n */\n\nimport { WebMapEvents } from './interfaces/Events';\n\nimport {\n  MapControl,\n  CreateControlOptions,\n  ButtonControlOptions,\n  ToggleControlOptions,\n  ToggleControl,\n  MapControls\n} from './interfaces/MapControl';\n\nimport { ControlPositions } from './interfaces/MapAdapter';\nimport { WebMapLayers } from './WebMapLayers';\n\nexport class WebMap<\n  M = any,\n  L = any,\n  C = any,\n  E extends WebMapEvents = WebMapEvents\n> extends WebMapLayers<M, L, C, E> {\n  static controls: {\n    [name: string]: (webMap: WebMap, options?: any) => any;\n  } = {\n    CONTROL: (\n      webMap: WebMap,\n      options: {\n        control: MapControl;\n        options?: CreateControlOptions;\n      }\n    ) => {\n      return webMap.createControl(options.control, options.options);\n    },\n    BUTTON: (webMap: WebMap, options: ButtonControlOptions) => {\n      return webMap.createButtonControl(options);\n    },\n    TOGGLE: (webMap: WebMap, options: ToggleControlOptions) => {\n      return webMap.createToggleControl(options);\n    }\n  };\n\n  async addControl<K extends keyof MapControls>(\n    controlDef: K | C,\n    position: ControlPositions,\n    options?: MapControls[K]\n  ): Promise<any> {\n    let control: C | undefined;\n    if (typeof controlDef === 'string') {\n      control = this.getControl(controlDef, options);\n    } else {\n      control = controlDef as C;\n    }\n    if (control) {\n      const _control = await control;\n      return this.mapAdapter.addControl(_control, position);\n    }\n  }\n\n  /**\n   * Creating a universal map layout control element. Can be used with any map adapter.\n   *\n   * @example\n   * const control = webMap.createControl({\n   *   onAdd() {\n   *     return document.createElement('div');\n   *   }\n   * });\n   */\n  async createControl(\n    control: MapControl,\n    options?: CreateControlOptions\n  ): Promise<C | undefined> {\n    await this.onLoad('build-map');\n    if (this.mapAdapter.createControl) {\n      return this.mapAdapter.createControl(control, options);\n    }\n  }\n\n  async createButtonControl(\n    options: ButtonControlOptions\n  ): Promise<C | undefined> {\n    await this.onLoad('build-map');\n    if (this.mapAdapter.createButtonControl) {\n      return this.mapAdapter.createButtonControl(options);\n    }\n  }\n\n  async createToggleControl(\n    options: ToggleControlOptions\n  ): Promise<(C & ToggleControl) | undefined> {\n    await this.onLoad('build-map');\n    if (this.mapAdapter.createToggleControl) {\n      return this.mapAdapter.createToggleControl(options);\n    } else {\n      if (this.mapAdapter.createButtonControl) {\n        return WebMap.utils.createToggleControl<C>(\n          this.mapAdapter.createButtonControl,\n          options\n        );\n      }\n    }\n  }\n\n  removeControl(control: any) {\n    if (control.remove) {\n      control.remove();\n    } else if (this.mapAdapter.removeControl) {\n      this.mapAdapter.removeControl(control);\n    }\n  }\n\n  getControl<K extends keyof MapControls>(\n    control: K,\n    options?: MapControls[K]\n  ): C | undefined {\n    const engine = this.mapAdapter.controlAdapters[control];\n    if (engine) {\n      return new engine(options);\n    } else {\n      const createFun = WebMap.controls[control];\n      if (createFun) {\n        return createFun(this, options);\n      }\n    }\n  }\n\n  protected async _addLayerProviders(): Promise<void> {\n    try {\n      for await (const kit of this._starterKits) {\n        if (kit.getLayerAdapters) {\n          const adapters = await kit.getLayerAdapters.call(kit);\n          if (adapters) {\n            for await (const adapter of adapters) {\n              const newAdapter = await adapter.createAdapter(this);\n              if (newAdapter) {\n                this.mapAdapter.layerAdapters[adapter.name] = newAdapter;\n              }\n            }\n          }\n        }\n      }\n    } catch (er) {\n      throw new Error(er);\n    }\n  }\n\n  protected async _onLoadSync(): Promise<void> {\n    for await (const kit of this._starterKits) {\n      if (kit.onLoadSync) {\n        try {\n          await kit.onLoadSync.call(kit, this);\n        } catch (er) {\n          console.error(er);\n        }\n      }\n    }\n  }\n}\n","/**\n * @module webmap\n */\nimport { WebMap } from './WebMap';\n\nexport * from './WebMap';\nexport * from './WebMapLayers';\nexport * from './interfaces/Events';\nexport * from './interfaces/BaseTypes';\nexport * from './interfaces/WebMapApp';\nexport * from './interfaces/MapAdapter';\nexport * from './interfaces/MapControl';\nexport * from './interfaces/StarterKit';\nexport * from './interfaces/LayerAdapter';\nexport * from './interfaces/DialogAdapter';\nexport * from './interfaces/RuntimeParams';\n\nexport { WebMap };\nexport default WebMap;\n","/**\n * @module vue-ngw-map\n */\nimport Vue from 'vue';\nimport VueNgwMap from './components/VueNgwMap';\n\nexport const capitalizeFirstLetter = (str: string) => {\n  if (!str || typeof str.charAt !== 'function') {\n    return str;\n  }\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n\ninterface VueElement extends Vue {\n  [prop: string]: any;\n}\n\nexport function propsBinder(\n  vueElement: VueElement,\n  props: Record<string, any>\n) {\n  for (const key in props) {\n    const setMethodName = 'set' + capitalizeFirstLetter(key);\n    if (key in props && vueElement[setMethodName]) {\n      const prop = props[key];\n      const deepValue =\n        (prop && prop.type === Object) ||\n        prop.type === Array ||\n        Array.isArray(prop.type);\n      vueElement.$watch(\n        key,\n        (newVal, oldVal) => {\n          vueElement[setMethodName](newVal, oldVal);\n        },\n        {\n          deep: deepValue\n        }\n      );\n    }\n  }\n}\n\nexport const findNgwMapParent = (\n  firstVueParent: Vue | VueNgwMap\n): VueNgwMap => {\n  let found = false;\n  while (firstVueParent && !found) {\n    if (!('ngwMap' in firstVueParent)) {\n      firstVueParent = firstVueParent.$parent;\n    } else {\n      found = true;\n    }\n  }\n  return firstVueParent as VueNgwMap;\n};\n"],"sourceRoot":""}