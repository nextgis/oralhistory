{"version":3,"sources":["webpack:///./nextgisweb_frontend/packages/utils/src/CancelablePromise.ts","webpack:///./nextgisweb_frontend/packages/utils/src/Clipboard.ts","webpack:///./nextgisweb_frontend/packages/utils/src/dom.ts","webpack:///./nextgisweb_frontend/packages/utils/src/events.ts","webpack:///./nextgisweb_frontend/packages/utils/src/propertiesFilter.ts","webpack:///./nextgisweb_frontend/packages/utils/src/sleep.ts","webpack:///./nextgisweb_frontend/packages/utils/src/deepmerge.ts","webpack:///./nextgisweb_frontend/packages/utils/src/debounce.ts","webpack:///./nextgisweb_frontend/packages/utils/src/index.ts"],"names":["handleCallback","resolve","reject","callback","r","e","executor","onCancel","_canceled","this","_promise","Promise","value","CancelablePromise","all","values","then","catch","onfulfilled","onrejected","p","cancel","undefined","errorCallback","_destroy","finally","onfinally","text","copy","navigator","clipboard","writeText","window","clipboardData","setData","copyToClipboard","console","log","input","document","createElement","body","appendChild","copyNodeContentsToClipboard","removeChild","select","setSelectionRange","execCommand","Clipboard","create","tagName","className","container","el","emitter","_eventsStatus","setEventStatus","event","status","onLoad","promises","Array","isArray","map","x","res","getEventStatus","once","_eventName","like","a","b","iLike","String","toUpperCase","re","replace","RegExp","exec","operationsAliases","gt","lt","ge","le","eq","ne","in","indexOf","notin","ilike","checkIfPropertyFilter","filter","pf","length","featureFilter","feature","filters","properties","$id","id","propertiesFilter","logic","filterFunction","field","operation","operationExec","filters_","some","every","sleep","delay","setTimeout","deepmerge","target","src","mergeArray","array","dst","concat","forEach","i","push","Object","keys","key","debounce","cb","wait","h","clearTimeout","args","fixUrlStr","url"],"mappings":"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","file":"main~51ec6c85-f9e8e9b.js","sourcesContent":["/**\n * @module ngw-utils\n */\ntype Reject = (reason?: any) => void;\ntype Resolve = (value?: any) => void;\n\nconst handleCallback = <T = never>(\n  resolve: Resolve,\n  reject: Reject,\n  callback: Resolve,\n  r: T\n) => {\n  try {\n    resolve(callback(r));\n  } catch (e) {\n    reject(e);\n  }\n};\n\nexport class CancelablePromise<T> implements Promise<T> {\n  readonly [Symbol.toStringTag]: string;\n\n  private _canceled = false;\n\n  private _promise?: Promise<T>;\n\n  constructor(\n    executor: (\n      resolve: (value?: T | PromiseLike<T>) => void,\n      reject: (reason?: any) => void\n    ) => void,\n    private onCancel?: (...args: any[]) => void\n  ) {\n    this._promise = new Promise(executor);\n  }\n\n  static resolve<T>(value: T | PromiseLike<T>): CancelablePromise<T> {\n    return new CancelablePromise(resolve => resolve(value));\n  }\n\n  static reject<T>(value: T | PromiseLike<T>): CancelablePromise<T> {\n    return new CancelablePromise((resolve, reject) => reject(value));\n  }\n\n  static all<T>(values: (T | PromiseLike<T>)[]): CancelablePromise<T[]> {\n    return new CancelablePromise((resolve, reject) => {\n      Promise.all(values)\n        .then(resolve)\n        .catch(reject);\n    });\n  }\n\n  then<TResult1 = T, TResult2 = never>(\n    onfulfilled?:\n      | ((value: T) => TResult1 | PromiseLike<TResult1>)\n      | undefined\n      | null,\n    onrejected?:\n      | ((reason: any) => TResult2 | PromiseLike<TResult2>)\n      | undefined\n      | null\n  ): CancelablePromise<TResult1 | TResult2> {\n    const p = new CancelablePromise(\n      (resolve, reject) => {\n        if (this._promise) {\n          this._promise.then(\n            r => {\n              if (this._canceled) {\n                p.cancel();\n              }\n              if (onfulfilled && !this._canceled) {\n                handleCallback(resolve, reject, onfulfilled, r);\n              } else {\n                resolve(r);\n              }\n            },\n            r => {\n              if (this._canceled) {\n                p.cancel();\n              }\n              if (onrejected && !this._canceled) {\n                handleCallback(resolve, reject, onrejected, r);\n              } else {\n                reject(r);\n              }\n            }\n          );\n        }\n      },\n      () => {\n        this.cancel();\n      }\n    );\n    return p as CancelablePromise<TResult1 | TResult2>;\n  }\n\n  catch<TResult = never>(\n    onrejected?:\n      | ((reason: any) => TResult | PromiseLike<TResult>)\n      | undefined\n      | null\n  ): CancelablePromise<T | TResult> {\n    return this.then(undefined, onrejected);\n  }\n\n  cancel(errorCallback?: (...args: any[]) => void) {\n    this._canceled = true;\n    if (errorCallback && this._promise) {\n      this._promise.catch(errorCallback);\n    }\n    if (this.onCancel) {\n      this.onCancel();\n    }\n    this._destroy();\n    return this;\n  }\n\n  finally(onfinally?: (() => void) | undefined | null): Promise<T> {\n    if (this._promise) {\n      return this._promise.finally(onfinally);\n    }\n    return Promise.reject<T>(onfinally);\n  }\n\n  private _destroy() {\n    this.onCancel = undefined;\n    this._promise = undefined;\n  }\n}\n","export class Clipboard {\n  constructor(text: string) {\n    if (text) {\n      this.copy(text);\n    }\n  }\n\n  static copy = (text: string) => {\n    return new Clipboard(text);\n  };\n\n  copy(text: string) {\n    try {\n      if ((navigator as any).clipboard) {\n        (navigator as any).clipboard.writeText(text);\n      } else if ((window as any).clipboardData) {\n        (window as any).clipboardData.setData('text', text);\n      } else {\n        this.copyToClipboard(text);\n      }\n      console.log('Copied to Clipboard');\n    } catch (e) {\n      console.log('Please copy coupon manually');\n    }\n  }\n\n  private copyToClipboard(text: string) {\n    const input = document.createElement('input') as HTMLInputElement;\n    input.value = text;\n    try {\n      document.body.appendChild(input);\n      this.copyNodeContentsToClipboard(input);\n    } finally {\n      document.body.removeChild(input);\n    }\n  }\n\n  private copyNodeContentsToClipboard(input: HTMLInputElement) {\n    input.select();\n    input.setSelectionRange(0, 99999); /*For mobile devices*/\n    document.execCommand('copy');\n  }\n}\n","/**\n * @module utils\n */\nexport function create(\n  tagName: string,\n  className?: string,\n  container?: HTMLElement\n): HTMLElement {\n  const el = window.document.createElement(tagName);\n  if (className !== undefined) el.className = className;\n  if (container) container.appendChild(el);\n  return el;\n}\n","import { EventEmitter } from 'events';\n\nexport class Events<E = any> {\n  private readonly _eventsStatus: { [key in keyof E]?: boolean } = {};\n\n  constructor(private emitter: EventEmitter) {}\n\n  setEventStatus(event: keyof E, status: boolean) {\n    this._eventsStatus[event] = status;\n  }\n\n  onLoad(event: keyof E | (keyof E)[]): Promise<this> {\n    const events: (keyof E)[] = Array.isArray(event) ? event : [event];\n    const promises = events.map(\n      x =>\n        new Promise(res => {\n          if (this.getEventStatus(x)) {\n            res(this);\n          } else {\n            const e = x as string | symbol;\n            this.emitter.once(e, () => {\n              this.setEventStatus(x, true);\n              res(this);\n            });\n          }\n        })\n    );\n    return Promise.all(promises).then(() => this);\n  }\n\n  getEventStatus(event: keyof E): boolean {\n    // ugly hack to disable type checking error\n    const _eventName = event as keyof E;\n    const status = this._eventsStatus[_eventName];\n    return status !== undefined ? !!status : false;\n  }\n}\n","import { Feature, GeoJsonProperties } from 'geojson';\n\n/**\n * gt - greater (>)\n * lt - lower (<)\n * ge - greater or equal (>=)\n * le - lower or equal (<=)\n * eq - equal (=)\n * ne - not equal (!=)\n * like - LIKE SQL statement (for strings compare)\n * ilike - ILIKE SQL statement (for strings compare)\n */\nexport type Operations =\n  | 'gt'\n  | 'lt'\n  | 'ge'\n  | 'le'\n  | 'eq'\n  | 'ne'\n  | 'in'\n  | 'notin'\n  | 'like'\n  | 'ilike';\n\n/**\n * field, operation, value\n * ['foo', 'eq', 'bar']\n * ['count', 'ge', 20]\n */\nexport type PropertyFilter<T extends any = any> = [string, Operations, T];\n\nexport type PropertiesFilter<T extends any = any> = (\n  | 'all'\n  | 'any'\n  | PropertyFilter<T>\n  | PropertiesFilter<T>\n)[];\n\nfunction like(a: string, b: string, iLike?: boolean) {\n  a = String(a);\n  b = String(b);\n  if (a === b) return true;\n  if (iLike && a.toUpperCase() === b.toUpperCase()) return true;\n  const re = `^${a}$`.replace(/%/g, '.*').replace('_', '.');\n  return new RegExp(re, iLike ? 'i' : '').exec(b) !== null;\n}\n\nexport const operationsAliases: {\n  [key in Operations]: (a: any, b: any) => boolean;\n} = {\n  // greater(>)\n  gt: (a: any, b: any) => a > b,\n  // lower(<)\n  lt: (a: any, b: any) => a < b,\n  // greater or equal(>=)\n  ge: (a: any, b: any) => a >= b,\n  // lower or equal(<=)\n  le: (a: any, b: any) => a <= b,\n  // equal(=)\n  eq: (a: any, b: any) => a === b,\n  //  not equal(!=)\n  ne: (a: any, b: any) => a !== b,\n\n  in: (a: any, b: any[]) => b.indexOf(a) !== -1,\n  notin: (a: any, b: any[]) => b.indexOf(a) === -1,\n  // LIKE SQL statement(for strings compare)\n  like: (a: string, b: string) => {\n    return like(a, b);\n  },\n  // ILIKE SQL statement(for strings compare)\n  ilike: (a: string, b: string) => {\n    return like(a, b, true);\n  }\n};\n\nexport function checkIfPropertyFilter(\n  filter: PropertyFilter | PropertiesFilter | string\n): filter is PropertyFilter {\n  const pf = filter as PropertyFilter;\n  if (\n    pf.length === 3 &&\n    typeof pf[0] === 'string' &&\n    typeof pf[1] === 'string'\n  ) {\n    return true;\n  }\n  return false;\n}\n\nexport function featureFilter(feature: Feature, filters: PropertiesFilter) {\n  const properties: GeoJsonProperties = { ...feature.properties };\n  if (properties) {\n    // workaround to filter by feature id\n    properties.$id = feature.id;\n    return propertiesFilter(properties, filters);\n  }\n  return false;\n}\n\nexport function propertiesFilter(\n  properties: { [field: string]: any },\n  filters: PropertiesFilter\n): boolean {\n  const logic = typeof filters[0] === 'string' ? filters[0] : 'all';\n  const filterFunction = (p: PropertyFilter | PropertiesFilter) => {\n    if (checkIfPropertyFilter(p)) {\n      const [field, operation, value] = p;\n      const operationExec = operationsAliases[operation];\n      if (operationExec) {\n        const property = properties[field];\n        return operationExec(property, value);\n      }\n      return true;\n    } else {\n      return propertiesFilter(properties, p);\n    }\n  };\n  const filters_ = filters.filter(x => Array.isArray(x)) as (\n    | PropertyFilter\n    | PropertiesFilter\n  )[];\n  return logic === 'any'\n    ? filters_.some(filterFunction)\n    : filters_.every(filterFunction);\n}\n","export function sleep(delay = 0): Promise<void> {\n  return new Promise<void>(resolve => setTimeout(resolve, delay));\n}\n","export function deepmerge(target: any, src: any, mergeArray = false): any {\n  const array = Array.isArray(src);\n  let dst: any = (array && []) || {};\n\n  if (array) {\n    if (mergeArray) {\n      target = target || [];\n      dst = dst.concat(target);\n      src.forEach(function(e: any, i: any) {\n        if (typeof dst[i] === 'undefined') {\n          dst[i] = e;\n        } else if (typeof e === 'object') {\n          dst[i] = deepmerge(target[i], e, mergeArray);\n        } else {\n          if (target.indexOf(e) === -1) {\n            dst.push(e);\n          }\n        }\n      });\n    } else {\n      // Replace array. Do not merge by default\n      dst = src;\n    }\n  } else {\n    if (target && typeof target === 'object') {\n      Object.keys(target).forEach(function(key) {\n        dst[key] = target[key];\n      });\n    }\n    Object.keys(src).forEach(function(key) {\n      if (typeof src[key] !== 'object' || !src[key]) {\n        dst[key] = src[key];\n      } else {\n        if (typeof target[key] === 'object' && typeof src[key] === 'object') {\n          dst[key] = deepmerge(target[key], src[key], mergeArray);\n        } else {\n          dst[key] = src[key];\n        }\n      }\n    });\n  }\n  return dst;\n}\n","export function debounce<T extends Function>(cb: T, wait = 10) {\n  let h = 0;\n  const callable = (...args: any) => {\n    clearTimeout(h);\n    h = window.setTimeout(() => cb(...args), wait);\n  };\n  return (callable as any) as T;\n}\n","/**\n * @module utils\n */\n\nexport * from './CancelablePromise';\nexport * from './Clipboard';\n\nimport * as Dom from './dom';\nexport const dom = Dom;\n\nexport * from './events';\nexport * from './array';\nexport * from './propertiesFilter';\nexport * from './sleep';\nexport * from './typeHelpers';\nexport { deepmerge } from './deepmerge';\nexport { debounce } from './debounce';\n/**\n * Given an array of member function names as strings, replace all of them\n * with bound versions that will always refer to `context` as `this`. This\n * is useful for classes where otherwise event bindings would reassign\n * `this` to the evented object or some other value: this lets you ensure\n * the `this` value always.\n * Taken from: https://github.com/mapbox/mapbox-gl-js/blob/v1.0.0/src/util/util.js#L243\n */\nexport function bindAll(\n  fns: string[],\n  context: { [method: string]: (...args: any[]) => any }\n): void {\n  fns.forEach(fn => {\n    if (!context[fn]) {\n      return;\n    }\n    context[fn] = context[fn].bind(context);\n  });\n}\n\nexport function fixUrlStr(url: string): string {\n  // remove double slash\n  return url.replace(/([^:]\\/)\\/+/g, '$1');\n}\n"],"sourceRoot":""}