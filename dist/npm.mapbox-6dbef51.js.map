{"version":3,"sources":["webpack:///./node_modules/@mapbox/geojson-coords/index.js","webpack:///./node_modules/@mapbox/geojson-normalize/index.js","webpack:///./node_modules/@mapbox/geojson-coords/flatten.js","webpack:///./node_modules/@mapbox/extent/index.js","webpack:///./node_modules/@mapbox/geojson-extent/index.js"],"names":["geojsonNormalize","__webpack_require__","geojsonFlatten","flatten","module","exports","_","normalized","coordinates","features","forEach","feature","geometry","concat","gj","type","types","properties","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","Feature","FeatureCollection","list","_flatten","Array","isArray","length","reduce","acc","item","push","Extent","bbox","this","_bbox","Infinity","_valid","prototype","include","ll","Math","min","max","equals","other","center","union","contains","_fastContains","lon","lat","intersect","Function","body","polygon","geojsonCoords","traverse","extent","geojsonTypesByDataAttributes","geometries","dataAttributes","Object","keys","getExtent","ext","coords","i","bboxify","map","value","some","attribute","indexOf","update"],"mappings":"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","file":"npm.mapbox-6dbef51.js","sourcesContent":["var geojsonNormalize = require('@mapbox/geojson-normalize'),\n    geojsonFlatten = require('geojson-flatten'),\n    flatten = require('./flatten');\n\nmodule.exports = function(_) {\n    if (!_) return [];\n    var normalized = geojsonFlatten(geojsonNormalize(_)),\n        coordinates = [];\n    normalized.features.forEach(function(feature) {\n        if (!feature.geometry) return;\n        coordinates = coordinates.concat(flatten(feature.geometry.coordinates));\n    });\n    return coordinates;\n};\n","module.exports = normalize;\n\nvar types = {\n    Point: 'geometry',\n    MultiPoint: 'geometry',\n    LineString: 'geometry',\n    MultiLineString: 'geometry',\n    Polygon: 'geometry',\n    MultiPolygon: 'geometry',\n    GeometryCollection: 'geometry',\n    Feature: 'feature',\n    FeatureCollection: 'featurecollection'\n};\n\n/**\n * Normalize a GeoJSON feature into a FeatureCollection.\n *\n * @param {object} gj geojson data\n * @returns {object} normalized geojson data\n */\nfunction normalize(gj) {\n    if (!gj || !gj.type) return null;\n    var type = types[gj.type];\n    if (!type) return null;\n\n    if (type === 'geometry') {\n        return {\n            type: 'FeatureCollection',\n            features: [{\n                type: 'Feature',\n                properties: {},\n                geometry: gj\n            }]\n        };\n    } else if (type === 'feature') {\n        return {\n            type: 'FeatureCollection',\n            features: [gj]\n        };\n    } else if (type === 'featurecollection') {\n        return gj;\n    }\n}\n","module.exports = function flatten(list) {\n    return _flatten(list);\n\n    function _flatten(list) {\n        if (Array.isArray(list) && list.length &&\n            typeof list[0] === 'number') {\n            return [list];\n        }\n        return list.reduce(function (acc, item) {\n            if (Array.isArray(item) && Array.isArray(item[0])) {\n                return acc.concat(_flatten(item));\n            } else {\n                acc.push(item);\n                return acc;\n            }\n        }, []);\n    }\n};\n","module.exports = Extent;\n\nfunction Extent(bbox) {\n    if (!(this instanceof Extent)) {\n        return new Extent(bbox);\n    }\n    this._bbox = bbox || [Infinity, Infinity, -Infinity, -Infinity];\n    this._valid = !!bbox;\n}\n\nExtent.prototype.include = function(ll) {\n    this._valid = true;\n    this._bbox[0] = Math.min(this._bbox[0], ll[0]);\n    this._bbox[1] = Math.min(this._bbox[1], ll[1]);\n    this._bbox[2] = Math.max(this._bbox[2], ll[0]);\n    this._bbox[3] = Math.max(this._bbox[3], ll[1]);\n    return this;\n};\n\nExtent.prototype.equals = function(_) {\n    var other;\n    if (_ instanceof Extent) { other = _.bbox(); } else { other = _; }\n    return this._bbox[0] == other[0] &&\n        this._bbox[1] == other[1] &&\n        this._bbox[2] == other[2] &&\n        this._bbox[3] == other[3];\n};\n\nExtent.prototype.center = function(_) {\n    if (!this._valid) return null;\n    return [\n        (this._bbox[0] + this._bbox[2]) / 2,\n        (this._bbox[1] + this._bbox[3]) / 2]\n};\n\nExtent.prototype.union = function(_) {\n    this._valid = true;\n    var other;\n    if (_ instanceof Extent) { other = _.bbox(); } else { other = _; }\n    this._bbox[0] = Math.min(this._bbox[0], other[0]);\n    this._bbox[1] = Math.min(this._bbox[1], other[1]);\n    this._bbox[2] = Math.max(this._bbox[2], other[2]);\n    this._bbox[3] = Math.max(this._bbox[3], other[3]);\n    return this;\n};\n\nExtent.prototype.bbox = function() {\n    if (!this._valid) return null;\n    return this._bbox;\n};\n\nExtent.prototype.contains = function(ll) {\n    if (!ll) return this._fastContains();\n    if (!this._valid) return null;\n    var lon = ll[0], lat = ll[1];\n    return this._bbox[0] <= lon &&\n        this._bbox[1] <= lat &&\n        this._bbox[2] >= lon &&\n        this._bbox[3] >= lat;\n};\n\nExtent.prototype.intersect = function(_) {\n    if (!this._valid) return null;\n\n    var other;\n    if (_ instanceof Extent) { other = _.bbox(); } else { other = _; }\n\n    return !(\n      this._bbox[0] > other[2] ||\n      this._bbox[2] < other[0] ||\n      this._bbox[3] < other[1] ||\n      this._bbox[1] > other[3]\n    );\n};\n\nExtent.prototype._fastContains = function() {\n    if (!this._valid) return new Function('return null;');\n    var body = 'return ' +\n        this._bbox[0] + '<= ll[0] &&' +\n        this._bbox[1] + '<= ll[1] &&' +\n        this._bbox[2] + '>= ll[0] &&' +\n        this._bbox[3] + '>= ll[1]';\n    return new Function('ll', body);\n};\n\nExtent.prototype.polygon = function() {\n    if (!this._valid) return null;\n    return {\n        type: 'Polygon',\n        coordinates: [\n            [\n                // W, S\n                [this._bbox[0], this._bbox[1]],\n                // E, S\n                [this._bbox[2], this._bbox[1]],\n                // E, N\n                [this._bbox[2], this._bbox[3]],\n                // W, N\n                [this._bbox[0], this._bbox[3]],\n                // W, S\n                [this._bbox[0], this._bbox[1]]\n            ]\n        ]\n    };\n};\n","var geojsonCoords = require('@mapbox/geojson-coords'),\n    traverse = require('traverse'),\n    extent = require('@mapbox/extent');\n\nvar geojsonTypesByDataAttributes = {\n    features: ['FeatureCollection'],\n    coordinates: ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon'],\n    geometry: ['Feature'],\n    geometries: ['GeometryCollection']\n}\n\nvar dataAttributes = Object.keys(geojsonTypesByDataAttributes);\n\nmodule.exports = function(_) {\n    return getExtent(_).bbox();\n};\n\nmodule.exports.polygon = function(_) {\n    return getExtent(_).polygon();\n};\n\nmodule.exports.bboxify = function(_) {\n    return traverse(_).map(function(value) {\n        if (!value) return ;\n\n        var isValid = dataAttributes.some(function(attribute){\n            if(value[attribute]) {\n                return geojsonTypesByDataAttributes[attribute].indexOf(value.type) !== -1;\n            }\n            return false;\n        });\n\n        if(isValid){\n            value.bbox = getExtent(value).bbox();\n            this.update(value);\n        }\n\n    });\n};\n\nfunction getExtent(_) {\n    var bbox = [Infinity, Infinity, -Infinity, -Infinity],\n        ext = extent(),\n        coords = geojsonCoords(_);\n    for (var i = 0; i < coords.length; i++) ext.include(coords[i]);\n    return ext;\n}\n"],"sourceRoot":""}